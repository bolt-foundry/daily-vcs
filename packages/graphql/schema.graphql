### @generated 
### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum AccountRole {
  ADMIN
  ANON
  OMNI
  OWNER
  REFRESH_CREDENTIALS_ONLY
  SERVICE_INGESTION
}

"""A person who uses our system on behalf of an orginization"""
type BfAccount implements BfNode {
  displayName: String

  """Unique identifier for the resource"""
  id: ID!
  organization: BfOrganization
  organizationBfGid: ID
  person: BfPerson
  personBfGid: ID
  role: AccountRole
}

type BfAccountConnection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [BfAccountEdge]

  """Flattened list of BfAccount type"""
  nodes: [BfAccount]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type BfAccountEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BfAccount
}

type BfClip implements BfNode {
  """Unique identifier for the resource"""
  id: ID!
  title: String
}

"""A review of a clip."""
type BfClipReview implements BfNode {
  """Unique identifier for the resource"""
  id: ID!
  mediaUrl: Url
  title: String
}

type BfClipReviewConnection {
  count: Int

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [BfClipReviewEdge]

  """Flattened list of BfClipReview type"""
  nodes: [BfClipReview]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type BfClipReviewEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BfClipReview
}

"""
The person acting on this request. The person is the person who is acting, the organization is the org on which they're acting
"""
interface BfCurrentViewer {
  organization: BfOrganization
  person: BfPerson
  role: AccountRole
}

"""The person acting on this request using a Bf access token."""
type BfCurrentViewerAccessToken implements BfCurrentViewer {
  organization: BfOrganization
  person: BfPerson
  role: AccountRole
}

"""The anonymous person acting on this request."""
type BfCurrentViewerAnon implements BfCurrentViewer {
  organization: BfOrganization
  person: BfPerson
  role: AccountRole
}

type BfGoogleDriveFolder implements BfNode {
  """Unique identifier for the resource"""
  id: ID!
  name: String
}

interface BfNode {
  """Unique identifier for the resource"""
  id: ID!
}

"""A collection of people working together"""
type BfOrganization implements BfNode {
  id: ID!
  name: String

  """Clips available."""
  reviewableClips(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): BfClipReviewConnection
}

"""A real human who uses our system"""
type BfPerson implements BfNode {
  accounts(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): BfAccountConnection
  email: String
  googleAuthAccessToken: String

  """Unique identifier for the resource"""
  id: ID!
  name: String
}

"""A transcript of a clip."""
type BfTranscript implements BfNode {
  """Unique identifier for the resource"""
  id: ID!
  transcript: String
}

"""The `File` scalar type represents a file upload."""
scalar File

type Mutation {
  createTranscript(transcript: String!): BfTranscript
  deleteTranscript(id: String!): BfTranscript
  linkAdvancedGoogleAuth(code: String): BfCurrentViewer
  loginWithGoogle(credential: String!): BfCurrentViewerAccessToken
  logout: BfCurrentViewer
  pickGoogleDriveFolder(folderId: String, name: String): BfGoogleDriveFolder
  readTextFile(file: File!): String
  submitContactForm(input: SubmitContactFormInput!): SubmitContactFormPayload
  switchAccount(accountId: ID!): BfCurrentViewerAccessToken
  upsertClip(file: File!, originalClipId: String!, title: String): BfClip
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  currentViewer: BfCurrentViewer
  node(id: ID!): BfNode
  transcripts: [BfTranscript]!
}

input SubmitContactFormInput {
  company: String
  email: String!
  message: String!
  name: String!
  phone: String
}

type SubmitContactFormPayload {
  message: String
  success: Boolean!
}

"""a fully qualified URL"""
scalar Url