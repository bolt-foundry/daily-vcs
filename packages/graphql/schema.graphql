### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum AccountRole {
  ADMIN
  ANON
  OWNER
  REFRESH_CREDENTIALS_ONLY
  SERVICE_INGESTION
}

"""
The actor acting on this request. The actor can be an organiazation or person.
"""
interface Actor implements BfNode {
  """Unique identifier for the resource"""
  id: ID!
  name: String
}

"""A person who uses our system on behalf of an orginization"""
type BfAccount implements BfNode {
  displayName: String

  """Unique identifier for the resource"""
  id: ID!
  organization: BfOrganization
  organizationBfGid: ID
  person: BfPerson
  personBfGid: ID
  role: AccountRole
}

type BfAccountConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [BfAccountEdge]

  """Flattened list of BfAccount type"""
  nodes: [BfAccount]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type BfAccountEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: BfAccount
}

"""
The person acting on this request. The actor can be an organiazation or person. The role is the role of the actor in the organization. The person is the person who is acting.
"""
interface BfCurrentViewer {
  actor: Actor
  googleAccessToken: String
  person: BfPerson
  role: AccountRole
}

"""The person acting on this request using a Bf access token."""
type BfCurrentViewerAccessToken implements BfCurrentViewer {
  actor: Actor
  googleAccessToken: String
  person: BfPerson
  role: AccountRole
}

"""The anonymous person acting on this request."""
type BfCurrentViewerAnon implements BfCurrentViewer {
  actor: Actor
  googleAccessToken: String
  person: BfPerson
  role: AccountRole
}

interface BfNode {
  """Unique identifier for the resource"""
  id: ID!
}

"""A collection of people working together"""
type BfOrganization implements Actor & BfNode {
  """Unique identifier for the resource"""
  id: ID!
  name: String
}

"""A real human who uses our system"""
type BfPerson implements Actor & BfNode {
  accounts(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): BfAccountConnection
  email: String

  """Unique identifier for the resource"""
  id: ID!
  name: String
}

type Mutation {
  linkGoogleAccount(code: String!): BfCurrentViewer
  loginWithGoogle(credential: String!): BfCurrentViewerAccessToken
  logout: BfCurrentViewer
  switchAccount(accountId: ID!): BfCurrentViewerAccessToken
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  currentViewer: BfCurrentViewer
}