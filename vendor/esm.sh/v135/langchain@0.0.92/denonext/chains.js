/* esm.sh - esbuild bundle(langchain@0.0.92/chains) denonext production */
import __Process$ from "node:process";
var St="__run",ae=class{constructor(e){Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.text=e}toJSON(){return{type:this._getType(),data:{content:this.text,role:"role"in this?this.role:void 0}}}},$=class extends ae{_getType(){return"human"}},se=class extends ae{_getType(){return"ai"}},_e=class extends ae{_getType(){return"system"}};var G=class{};var xe=class{addUserMessage(e){return this.addMessage(new $(e))}addAIChatMessage(e){return this.addMessage(new se(e))}};import{v4 as le}from"/v135/uuid@9.0.1/denonext/uuid.mjs";import*as Lt from"/v135/uuid@9.0.1/denonext/uuid.mjs";var He=class{},D=class n extends He{constructor(e){super(),Object.defineProperty(this,"ignoreLLM",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"ignoreChain",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"ignoreAgent",{enumerable:!0,configurable:!0,writable:!0,value:!1}),e&&(this.ignoreLLM=e.ignoreLLM??this.ignoreLLM,this.ignoreChain=e.ignoreChain??this.ignoreChain,this.ignoreAgent=e.ignoreAgent??this.ignoreAgent)}copy(){return new this.constructor(this)}static fromMethods(e){class t extends n{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:Lt.v4()}),Object.assign(this,e)}}return new t}};import At from"/v135/ansi-styles@5.2.0/denonext/ansi-styles.mjs";var j=class extends D{constructor(){super(),Object.defineProperty(this,"runMap",{enumerable:!0,configurable:!0,writable:!0,value:new Map})}copy(){return this}_addChildRun(e,t){e.child_runs.push(t)}_startTrace(e){if(e.parent_run_id!==void 0){let t=this.runMap.get(e.parent_run_id);t&&this._addChildRun(t,e)}this.runMap.set(e.id,e)}async _endTrace(e){let t=e.parent_run_id!==void 0&&this.runMap.get(e.parent_run_id);t?t.child_execution_order=Math.max(t.child_execution_order,e.child_execution_order):await this.persistRun(e),this.runMap.delete(e.id)}_getExecutionOrder(e){let t=e!==void 0&&this.runMap.get(e);return t?t.child_execution_order+1:1}async handleLLMStart(e,t,r,i,o){let a=this._getExecutionOrder(i),s={id:r,name:e.name,parent_run_id:i,start_time:Date.now(),serialized:e,inputs:{prompts:t},execution_order:a,child_runs:[],child_execution_order:a,run_type:"llm",extra:o};this._startTrace(s),await this.onLLMStart?.(s)}async handleChatModelStart(e,t,r,i,o){let a=this._getExecutionOrder(i),s={id:r,name:e.name,parent_run_id:i,start_time:Date.now(),serialized:e,inputs:{messages:t},execution_order:a,child_runs:[],child_execution_order:a,run_type:"llm",extra:o};this._startTrace(s),await this.onLLMStart?.(s)}async handleLLMEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="llm")throw new Error("No LLM run to end.");r.end_time=Date.now(),r.outputs=e,await this.onLLMEnd?.(r),await this._endTrace(r)}async handleLLMError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="llm")throw new Error("No LLM run to end.");r.end_time=Date.now(),r.error=e.message,await this.onLLMError?.(r),await this._endTrace(r)}async handleChainStart(e,t,r,i){let o=this._getExecutionOrder(i),a={id:r,name:e.name,parent_run_id:i,start_time:Date.now(),serialized:e,inputs:t,execution_order:o,child_execution_order:o,run_type:"chain",child_runs:[]};this._startTrace(a),await this.onChainStart?.(a)}async handleChainEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")throw new Error("No chain run to end.");r.end_time=Date.now(),r.outputs=e,await this.onChainEnd?.(r),await this._endTrace(r)}async handleChainError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")throw new Error("No chain run to end.");r.end_time=Date.now(),r.error=e.message,await this.onChainError?.(r),await this._endTrace(r)}async handleToolStart(e,t,r,i){let o=this._getExecutionOrder(i),a={id:r,name:e.name,parent_run_id:i,start_time:Date.now(),serialized:e,inputs:{input:t},execution_order:o,child_execution_order:o,run_type:"tool",child_runs:[]};this._startTrace(a),await this.onToolStart?.(a)}async handleToolEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="tool")throw new Error("No tool run to end");r.end_time=Date.now(),r.outputs={output:e},await this.onToolEnd?.(r),await this._endTrace(r)}async handleToolError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="tool")throw new Error("No tool run to end");r.end_time=Date.now(),r.error=e.message,await this.onToolError?.(r),await this._endTrace(r)}async handleAgentAction(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")return;let i=r;i.actions=i.actions||[],i.actions.push(e),await this.onAgentAction?.(r)}};function g(n,e){return`${n.open}${e}${n.close}`}function K(n,e){try{return JSON.stringify(n,null,2)}catch{return e}}function W(n){if(!n.end_time)return"";let e=n.end_time-n.start_time;return e<1e3?`${e}ms`:`${(e/1e3).toFixed(2)}s`}var{color:P}=At,ue=class extends j{constructor(){super(...arguments),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"console_callback_handler"})}persistRun(e){return Promise.resolve()}getParents(e){let t=[],r=e;for(;r.parent_run_id;){let i=this.runMap.get(r.parent_run_id);if(i)t.push(i),r=i;else break}return t}getBreadcrumbs(e){let r=[...this.getParents(e).reverse(),e].map((i,o,a)=>{let s=`${i.execution_order}:${i.run_type}:${i.name}`;return o===a.length-1?g(At.bold,s):s}).join(" > ");return g(P.grey,r)}onChainStart(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.green,"[chain/start]")} [${t}] Entering Chain run with input: ${K(e.inputs,"[inputs]")}`)}onChainEnd(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.cyan,"[chain/end]")} [${t}] [${W(e)}] Exiting Chain run with output: ${K(e.outputs,"[outputs]")}`)}onChainError(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.red,"[chain/error]")} [${t}] [${W(e)}] Chain run errored with error: ${K(e.error,"[error]")}`)}onLLMStart(e){let t=this.getBreadcrumbs(e),r="prompts"in e.inputs?{prompts:e.inputs.prompts.map(i=>i.trim())}:e.inputs;console.log(`${g(P.green,"[llm/start]")} [${t}] Entering LLM run with input: ${K(r,"[inputs]")}`)}onLLMEnd(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.cyan,"[llm/end]")} [${t}] [${W(e)}] Exiting LLM run with output: ${K(e.outputs,"[response]")}`)}onLLMError(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.red,"[llm/error]")} [${t}] [${W(e)}] LLM run errored with error: ${K(e.error,"[error]")}`)}onToolStart(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.green,"[tool/start]")} [${t}] Entering Tool run with input: "${e.inputs.input?.trim()}"`)}onToolEnd(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.cyan,"[tool/end]")} [${t}] [${W(e)}] Exiting Tool run with output: "${e.outputs?.output?.trim()}"`)}onToolError(e){let t=this.getBreadcrumbs(e);console.log(`${g(P.red,"[tool/error]")} [${t}] [${W(e)}] Tool run errored with error: ${K(e.error,"[error]")}`)}onAgentAction(e){let t=e,r=this.getBreadcrumbs(e);console.log(`${g(P.blue,"[agent/action]")} [${r}] Agent selected action: ${K(t.actions[t.actions.length-1],"[action]")}`)}};import fr from"/v135/p-retry@4.6.2/denonext/p-retry.mjs";import Be from"/v135/p-queue@6.6.2/denonext/p-queue.mjs";var br=[400,401,403,404,405,406,407,408,409],C=class{constructor(e){Object.defineProperty(this,"maxConcurrency",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"maxRetries",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"queue",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.maxConcurrency=e.maxConcurrency??1/0,this.maxRetries=e.maxRetries??6;let t="default"in Be?Be.default:Be;this.queue=new t({concurrency:this.maxConcurrency})}call(e,...t){return this.queue.add(()=>fr(()=>e(...t).catch(r=>{throw r instanceof Error?r:new Error(r)}),{onFailedAttempt(r){if(r.message.startsWith("Cancel")||r.message.startsWith("TimeoutError")||r.message.startsWith("AbortError")||r?.code==="ECONNABORTED")throw r;let i=r?.response?.status;if(i&&br.includes(+i))throw r},retries:this.maxRetries,randomize:!0}),{throwOnTimeout:!0})}callWithOptions(e,t,...r){return e.signal?Promise.race([this.call(t,...r),new Promise((i,o)=>{e.signal?.addEventListener("abort",()=>{o(new Error("AbortError"))})})]):this.call(t,...r)}fetch(...e){return this.call(()=>fetch(...e).then(t=>t.ok?t:Promise.reject(t)))}};var yr=()=>typeof window<"u"&&typeof window.document<"u",wr=()=>typeof globalThis=="object"&&globalThis.constructor&&globalThis.constructor.name==="DedicatedWorkerGlobalScope",gr=()=>typeof window<"u"&&window.name==="nodejs"||typeof navigator<"u"&&(navigator.userAgent.includes("Node.js")||navigator.userAgent.includes("jsdom")),Rt=()=>typeof Deno<"u",_r=()=>typeof __Process$<"u"&&typeof __Process$.versions<"u"&&typeof __Process$.versions.node<"u"&&!Rt(),xr=()=>{let n;return yr()?n="browser":_r()?n="node":wr()?n="webworker":gr()?n="jsdom":Rt()?n="deno":n="other",n},Ge;async function Mt(){return Ge===void 0&&(Ge={library:"langchain-js",runtime:xr()}),Ge}function y(n){try{return typeof __Process$<"u"?__Process$.env?.[n]:void 0}catch{return}}var ve=class extends j{constructor({exampleId:e,sessionName:t,callerParams:r,timeout:i}={}){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"langchain_tracer"}),Object.defineProperty(this,"endpoint",{enumerable:!0,configurable:!0,writable:!0,value:y("LANGCHAIN_ENDPOINT")||"http://localhost:1984"}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{"Content-Type":"application/json"}}),Object.defineProperty(this,"sessionName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exampleId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"caller",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:5e3});let o=y("LANGCHAIN_API_KEY");o&&(this.headers["x-api-key"]=o),this.sessionName=t??y("LANGCHAIN_SESSION"),this.exampleId=e,this.timeout=i??this.timeout,this.caller=new C(r??{maxRetries:2})}async _convertToCreate(e,t=void 0){let r=e.extra??{};return r.runtime=await Mt(),{id:e.id,name:e.name,start_time:e.start_time,end_time:e.end_time,run_type:e.run_type,reference_example_id:e.parent_run_id?void 0:t,extra:r,parent_run_id:e.parent_run_id,execution_order:e.execution_order,serialized:e.serialized,error:e.error,inputs:e.inputs,outputs:e.outputs??{},session_name:this.sessionName,child_runs:[]}}async persistRun(e){}async _persistRunSingle(e){let t=await this._convertToCreate(e,this.exampleId),r=`${this.endpoint}/runs`,i=await this.caller.call(fetch,r,{method:"POST",headers:this.headers,body:JSON.stringify(t),signal:AbortSignal.timeout(this.timeout)}),o=await i.text();if(!i.ok)throw new Error(`Failed to persist run: ${i.status} ${i.statusText} ${o}`)}async _updateRunSingle(e){let t={end_time:e.end_time,error:e.error,outputs:e.outputs,parent_run_id:e.parent_run_id,reference_example_id:e.reference_example_id},r=`${this.endpoint}/runs/${e.id}`,i=await this.caller.call(fetch,r,{method:"PATCH",headers:this.headers,body:JSON.stringify(t),signal:AbortSignal.timeout(this.timeout)}),o=await i.text();if(!i.ok)throw new Error(`Failed to update run: ${i.status} ${i.statusText} ${o}`)}async onLLMStart(e){await this._persistRunSingle(e)}async onLLMEnd(e){await this._updateRunSingle(e)}async onLLMError(e){await this._updateRunSingle(e)}async onChainStart(e){await this._persistRunSingle(e)}async onChainEnd(e){await this._updateRunSingle(e)}async onChainError(e){await this._updateRunSingle(e)}async onToolStart(e){await this._persistRunSingle(e)}async onToolEnd(e){await this._updateRunSingle(e)}async onToolError(e){await this._updateRunSingle(e)}};var Pe=class{},We=(n,e)=>{if(e!==void 0)return n[e];let t=Object.keys(n);if(t.length===1)return n[t[0]];throw new Error(`input values have ${t.length} keys, you must specify an input key or pass only 1 key as input`)};function Y(n,e="Human",t="AI"){let r=[];for(let i of n){let o;if(i._getType()==="human")o=e;else if(i._getType()==="ai")o=t;else if(i._getType()==="system")o="System";else if(i._getType()==="generic")o=i.role;else throw new Error(`Got unsupported message type: ${i}`);r.push(`${o}: ${i.text}`)}return r.join(`
`)}var Te=class extends j{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"langchain_tracer"}),Object.defineProperty(this,"endpoint",{enumerable:!0,configurable:!0,writable:!0,value:y("LANGCHAIN_ENDPOINT")||"http://localhost:1984"}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{"Content-Type":"application/json"}}),Object.defineProperty(this,"session",{enumerable:!0,configurable:!0,writable:!0,value:void 0});let e=y("LANGCHAIN_API_KEY");e&&(this.headers["x-api-key"]=e)}async newSession(e){let t={start_time:Date.now(),name:e},r=await this.persistSession(t);return this.session=r,r}async loadSession(e){let t=`${this.endpoint}/sessions?name=${e}`;return this._handleSessionResponse(t)}async loadDefaultSession(){let e=`${this.endpoint}/sessions?name=default`;return this._handleSessionResponse(e)}async convertV2RunToRun(e){let t=this.session??await this.loadDefaultSession(),r=e.serialized,i;if(e.run_type==="llm"){let o=e.inputs.prompts?e.inputs.prompts:e.inputs.messages.map(s=>Y(s));i={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,prompts:o,response:e.outputs}}else if(e.run_type==="chain"){let o=await Promise.all(e.child_runs.map(s=>this.convertV2RunToRun(s)));i={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,inputs:e.inputs,outputs:e.outputs,child_llm_runs:o.filter(s=>s.type==="llm"),child_chain_runs:o.filter(s=>s.type==="chain"),child_tool_runs:o.filter(s=>s.type==="tool")}}else if(e.run_type==="tool"){let o=await Promise.all(e.child_runs.map(s=>this.convertV2RunToRun(s)));i={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,tool_input:e.inputs.input,output:e.outputs?.output,action:JSON.stringify(r),child_llm_runs:o.filter(s=>s.type==="llm"),child_chain_runs:o.filter(s=>s.type==="chain"),child_tool_runs:o.filter(s=>s.type==="tool")}}else throw new Error(`Unknown run type: ${e.run_type}`);return i}async persistRun(e){let t,r;e.run_type!==void 0?r=await this.convertV2RunToRun(e):r=e,r.type==="llm"?t=`${this.endpoint}/llm-runs`:r.type==="chain"?t=`${this.endpoint}/chain-runs`:t=`${this.endpoint}/tool-runs`;let i=await fetch(t,{method:"POST",headers:this.headers,body:JSON.stringify(r)});i.ok||console.error(`Failed to persist run: ${i.status} ${i.statusText}`)}async persistSession(e){let t=`${this.endpoint}/sessions`,r=await fetch(t,{method:"POST",headers:this.headers,body:JSON.stringify(e)});return r.ok?{id:(await r.json()).id,...e}:(console.error(`Failed to persist session: ${r.status} ${r.statusText}, using default session.`),{id:1,...e})}async _handleSessionResponse(e){let t=await fetch(e,{method:"GET",headers:this.headers}),r;if(!t.ok)return console.error(`Failed to load session: ${t.status} ${t.statusText}`),r={id:1,start_time:Date.now()},this.session=r,r;let i=await t.json();return i.length===0?(r={id:1,start_time:Date.now()},this.session=r,r):([r]=i,this.session=r,r)}};async function It(n){let e=new Te;return n?await e.loadSession(n):await e.loadDefaultSession(),e}async function kt(){return new ve}var Ye=class{setHandler(e){return this.setHandlers([e])}},ce=class{constructor(e,t,r,i){Object.defineProperty(this,"runId",{enumerable:!0,configurable:!0,writable:!0,value:e}),Object.defineProperty(this,"handlers",{enumerable:!0,configurable:!0,writable:!0,value:t}),Object.defineProperty(this,"inheritableHandlers",{enumerable:!0,configurable:!0,writable:!0,value:r}),Object.defineProperty(this,"_parentRunId",{enumerable:!0,configurable:!0,writable:!0,value:i})}async handleText(e){await Promise.all(this.handlers.map(async t=>{try{await t.handleText?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleText: ${r}`)}}))}},Ee=class extends ce{async handleLLMNewToken(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMNewToken?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMNewToken: ${r}`)}}))}async handleLLMError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMError: ${r}`)}}))}async handleLLMEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMEnd: ${r}`)}}))}},Je=class extends ce{getChild(){let e=new J(this.runId);return e.setHandlers(this.inheritableHandlers),e}async handleChainError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreChain)try{await t.handleChainError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleChainError: ${r}`)}}))}async handleChainEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreChain)try{await t.handleChainEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleChainEnd: ${r}`)}}))}async handleAgentAction(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleAgentAction?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleAgentAction: ${r}`)}}))}async handleAgentEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleAgentEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleAgentEnd: ${r}`)}}))}},Ze=class extends ce{getChild(){let e=new J(this.runId);return e.setHandlers(this.inheritableHandlers),e}async handleToolError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleToolError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleToolError: ${r}`)}}))}async handleToolEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleToolEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleToolEnd: ${r}`)}}))}},J=class n extends Ye{constructor(e){super(),Object.defineProperty(this,"handlers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inheritableHandlers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"callback_manager"}),Object.defineProperty(this,"_parentRunId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.handlers=[],this.inheritableHandlers=[],this._parentRunId=e}async handleLLMStart(e,t,r=le(),i=void 0,o=void 0){return await Promise.all(this.handlers.map(async a=>{if(!a.ignoreLLM)try{await a.handleLLMStart?.(e,t,r,this._parentRunId,o)}catch(s){console.error(`Error in handler ${a.constructor.name}, handleLLMStart: ${s}`)}})),new Ee(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleChatModelStart(e,t,r=le(),i=void 0,o=void 0){let a;return await Promise.all(this.handlers.map(async s=>{if(!s.ignoreLLM)try{s.handleChatModelStart?await s.handleChatModelStart?.(e,t,r,this._parentRunId,o):s.handleLLMStart&&(a=t.map(u=>Y(u)),await s.handleLLMStart?.(e,a,r,this._parentRunId,o))}catch(u){console.error(`Error in handler ${s.constructor.name}, handleLLMStart: ${u}`)}})),new Ee(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleChainStart(e,t,r=le()){return await Promise.all(this.handlers.map(async i=>{if(!i.ignoreChain)try{await i.handleChainStart?.(e,t,r,this._parentRunId)}catch(o){console.error(`Error in handler ${i.constructor.name}, handleChainStart: ${o}`)}})),new Je(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleToolStart(e,t,r=le()){return await Promise.all(this.handlers.map(async i=>{if(!i.ignoreAgent)try{await i.handleToolStart?.(e,t,r,this._parentRunId)}catch(o){console.error(`Error in handler ${i.constructor.name}, handleToolStart: ${o}`)}})),new Ze(r,this.handlers,this.inheritableHandlers,this._parentRunId)}addHandler(e,t=!0){this.handlers.push(e),t&&this.inheritableHandlers.push(e)}removeHandler(e){this.handlers=this.handlers.filter(t=>t!==e),this.inheritableHandlers=this.inheritableHandlers.filter(t=>t!==e)}setHandlers(e,t=!0){this.handlers=[],this.inheritableHandlers=[];for(let r of e)this.addHandler(r,t)}copy(e=[],t=!0){let r=new n(this._parentRunId);for(let i of this.handlers){let o=this.inheritableHandlers.includes(i);r.addHandler(i,o)}for(let i of e)r.handlers.filter(o=>o.name==="console_callback_handler").some(o=>o.name===i.name)||r.addHandler(i,t);return r}static fromHandlers(e){class t extends D{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:le()}),Object.assign(this,e)}}let r=new this;return r.addHandler(new t),r}static async configure(e,t,r){let i;(e||t)&&(Array.isArray(e)||!e?(i=new n,i.setHandlers(e?.map(qt)??[],!0)):i=e,i=i.copy(Array.isArray(t)?t.map(qt):t?.handlers,!1));let o=y("LANGCHAIN_VERBOSE")||r?.verbose,a=y("LANGCHAIN_TRACING_V2")??!1,s=a||(y("LANGCHAIN_TRACING")??!1);if(o||s){if(i||(i=new n),o&&!i.handlers.some(u=>u.name===ue.prototype.name)){let u=new ue;i.addHandler(u,!0)}if(s&&!i.handlers.some(u=>u.name==="langchain_tracer"))if(a)i.addHandler(await kt(),!0);else{let u=y("LANGCHAIN_SESSION");i.addHandler(await It(u),!0)}}return i}};function qt(n){return"name"in n?n:D.fromMethods(n)}import{Tiktoken as vr,getEncodingNameForModel as Pr}from"/v135/js-tiktoken@1.0.8/denonext/lite.js";var Ce={},Tr=new C({});async function jt(n,e){return n in Ce||(Ce[n]=Tr.fetch(`https://tiktoken.pages.dev/js/${n}.json`,{signal:e?.signal}).then(t=>t.json()).catch(t=>{throw delete Ce[n],t})),new vr(await Ce[n],e?.extendedSpecialTokens)}async function Oe(n,e){return jt(Pr(n),e)}var Xe=n=>n.startsWith("gpt-3.5-turbo-")?"gpt-3.5-turbo":n.startsWith("gpt-4-32k-")?"gpt-4-32k":n.startsWith("gpt-4-")?"gpt-4":n;var et=n=>{switch(Xe(n)){case"gpt-3.5-turbo":return 4096;case"gpt-4-32k":return 32768;case"gpt-4":return 8192;case"text-davinci-003":return 4097;case"text-curie-001":return 2048;case"text-babbage-001":return 2048;case"text-ada-001":return 2048;case"code-davinci-002":return 8e3;case"code-cushman-001":return 2048;default:return 4097}},tt=async({prompt:n,modelName:e})=>{let t=Math.ceil(n.length/4);try{t=(await Oe(e)).encode(n).length}catch{console.warn("Failed to calculate number of tokens, falling back to approximate count")}return et(e)-t};var Er=()=>!1,pe=class{constructor(e){Object.defineProperty(this,"verbose",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"callbacks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.verbose=e.verbose??Er(),this.callbacks=e.callbacks}},Z=class extends pe{get callKeys(){return["stop","timeout","signal"]}constructor(e){super({verbose:e.verbose,callbacks:e.callbacks??e.callbackManager}),Object.defineProperty(this,"caller",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_encoding",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.caller=new C(e??{})}async getNumTokens(e){let t=Math.ceil(e.length/4);if(!this._encoding)try{this._encoding=await Oe("modelName"in this?Xe(this.modelName):"gpt2")}catch(r){console.warn("Failed to calculate number of tokens, falling back to approximate count",r)}return this._encoding&&(t=this._encoding.encode(e).length),t}_identifyingParams(){return{}}serialize(){return{...this._identifyingParams(),_type:this._llmType(),_model:this._modelType()}}static async deserialize(e){let{_type:t,_model:r,...i}=e;if(r&&r!=="base_chat_model")throw new Error(`Cannot load LLM with model ${r}`);let o={openai:(await import("/v135/langchain@0.0.92/denonext/dist/chat_models/openai.js")).ChatOpenAI}[t];if(o===void 0)throw new Error(`Cannot load  LLM with type ${t}`);return new o(i)}};var m=class extends pe{constructor(e,t,r){if(arguments.length===1&&typeof e=="object"&&!("saveContext"in e)){let{memory:i,callbackManager:o,...a}=e;super({...a,callbacks:o??a.callbacks}),this.memory=i}else super({verbose:t,callbacks:r}),this.memory=e}serialize(){throw new Error("Method not implemented.")}async run(e,t){if(!(this.inputKeys.length<=1))throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);let i=this.inputKeys.length?{[this.inputKeys[0]]:e}:{},o=await this.call(i,t),a=Object.keys(o);if(a.length===1)return o[a[0]];throw new Error("return values have multiple keys, `run` only supported when one key currently")}async call(e,t){let r={...e};if(this.memory!=null){let s=await this.memory.loadMemoryVariables(e);for(let[u,l]of Object.entries(s))r[u]=l}let o=await(await J.configure(t,this.callbacks,{verbose:this.verbose}))?.handleChainStart({name:this._chainType()},r),a;try{a=await this._call(r,o)}catch(s){throw await o?.handleChainError(s),s}return this.memory!=null&&await this.memory.saveContext(e,a),await o?.handleChainEnd(a),Object.defineProperty(a,St,{value:o?{runId:o?.runId}:void 0,configurable:!0}),a}async apply(e,t){return Promise.all(e.map(async(r,i)=>this.call(r,t?.[i])))}static async deserialize(e,t={}){switch(e._type){case"llm_chain":{let{LLMChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/llm_chain.js");return r.deserialize(e)}case"sequential_chain":{let{SequentialChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/sequential_chain.js");return r.deserialize(e)}case"simple_sequential_chain":{let{SimpleSequentialChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/sequential_chain.js");return r.deserialize(e)}case"stuff_documents_chain":{let{StuffDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"map_reduce_documents_chain":{let{MapReduceDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"refine_documents_chain":{let{RefineDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"vector_db_qa":{let{VectorDBQAChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/vector_db_qa.js");return r.deserialize(e,t)}case"api_chain":{let{APIChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/api/api_chain.js");return r.deserialize(e)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}};var Se=class extends G{constructor(e){super(),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.value=e}toString(){return this.value}toChatMessages(){return[new $(this.value)]}},M=class{constructor(e){Object.defineProperty(this,"inputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"partialVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0});let{inputVariables:t}=e;if(t.includes("stop"))throw new Error("Cannot have an input variable named 'stop', as it is used internally, please rename.");Object.assign(this,e)}async mergePartialAndUserVariables(e){let t=this.partialVariables??{},r={};for(let[o,a]of Object.entries(t))typeof a=="string"?r[o]=a:r[o]=await a();return{...r,...e}}static async deserialize(e){switch(e._type){case"prompt":{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize(e)}case void 0:{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize({...e,_type:"prompt"})}case"few_shot":{let{FewShotPromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/few_shot.js");return t.deserialize(e)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}},V=class extends M{async formatPromptValue(e){let t=await this.format(e);return new Se(t)}};var h=class n extends m{get inputKeys(){return this.prompt.inputVariables}get outputKeys(){return[this.outputKey]}constructor(e){if(super(e),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"llm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"text"}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.prompt=e.prompt,this.llm=e.llm,this.outputKey=e.outputKey??this.outputKey,this.outputParser=e.outputParser??this.outputParser,this.prompt.outputParser){if(this.outputParser)throw new Error("Cannot set both outputParser and prompt.outputParser");this.outputParser=this.prompt.outputParser}}async _getFinalOutput(e,t,r){let i=e[0].text,o;return this.outputParser?o=await this.outputParser.parseWithPrompt(i,t,r?.getChild()):o=i,o}call(e,t){return super.call(e,t)}async _call(e,t){let r={...e},i={};for(let s of this.llm.callKeys)s in e&&(i[s]=e[s],delete r[s]);let o=await this.prompt.formatPromptValue(r),{generations:a}=await this.llm.generatePrompt([o],i,t?.getChild());return{[this.outputKey]:await this._getFinalOutput(a[0],o,t)}}async predict(e,t){return(await this.call(e,t))[this.outputKey]}_chainType(){return"llm_chain"}static async deserialize(e){let{llm:t,prompt:r}=e;if(!t)throw new Error("LLMChain must have llm");if(!r)throw new Error("LLMChain must have prompt");return new n({llm:await Z.deserialize(t),prompt:await M.deserialize(r)})}serialize(){return{_type:this._chainType(),llm:this.llm.serialize(),prompt:this.prompt.serialize()}}};var Kt=n=>{let e=n.split(""),t=[],r=(o,a)=>{for(let s=a;s<e.length;s+=1)if(o.includes(e[s]))return s;return-1},i=0;for(;i<e.length;)if(e[i]==="{"&&i+1<e.length&&e[i+1]==="{")t.push({type:"literal",text:"{"}),i+=2;else if(e[i]==="}"&&i+1<e.length&&e[i+1]==="}")t.push({type:"literal",text:"}"}),i+=2;else if(e[i]==="{"){let o=r("}",i);if(o<0)throw new Error("Unclosed '{' in template.");t.push({type:"variable",name:e.slice(i+1,o).join("")}),i=o+1}else{if(e[i]==="}")throw new Error("Single '}' in template.");{let o=r("{}",i),a=(o<0?e.slice(i):e.slice(i,o)).join("");t.push({type:"literal",text:a}),i=o<0?e.length:o}}return t},he=(n,e)=>Kt(n).reduce((t,r)=>{if(r.type==="variable"){if(r.name in e)return t+e[r.name];throw new Error(`Missing value for input ${r.name}`)}return t+r.text},""),rt={"f-string":he,jinja2:(n,e)=>""},Cr={"f-string":Kt,jinja2:n=>[]},X=(n,e,t)=>rt[e](n,t),nt=(n,e)=>Cr[e](n),me=(n,e,t)=>{if(!(e in rt)){let r=Object.keys(rt);throw new Error(`Invalid template format. Got \`${e}\`;
                         should be one of ${r}`)}try{let r=t.reduce((i,o)=>(i[o]="foo",i),{});X(n,e,r)}catch{throw new Error("Invalid prompt schema.")}};var p=class n extends V{constructor(e){if(super(e),Object.defineProperty(this,"template",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.validateTemplate){let t=this.inputVariables;this.partialVariables&&(t=t.concat(Object.keys(this.partialVariables))),me(this.template,this.templateFormat,t)}}_getPromptType(){return"prompt"}async format(e){let t=await this.mergePartialAndUserVariables(e);return X(this.template,this.templateFormat,t)}static fromExamples(e,t,r,i=`

`,o=""){let a=[o,...e,t].join(i);return new n({inputVariables:r,template:a})}static fromTemplate(e,{templateFormat:t="f-string",...r}={}){let i=new Set;return nt(e,t).forEach(o=>{o.type==="variable"&&i.add(o.name)}),new n({inputVariables:[...i],templateFormat:t,template:e,...r})}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(r=>!(r in e)),t.partialVariables={...this.partialVariables??{},...e},new n(t)}serialize(){if(this.outputParser!==void 0)throw new Error("Cannot serialize a prompt template with an output parser");return{_type:this._getPromptType(),input_variables:this.inputVariables,template:this.template,template_format:this.templateFormat}}static async deserialize(e){if(!e.template)throw new Error("Prompt template must have a template");return new n({inputVariables:e.input_variables,template:e.template,templateFormat:e.template_format})}};var Nt=`You are given the below API Documentation:
{api_docs}
Using this documentation, generate the full API url to call for answering the user question.
You should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.

Question:{question}
API url:`,$t=new p({inputVariables:["api_docs","question"],template:Nt}),Or=`${Nt} {api_url}

Here is the response from the API:

{api_response}

Summarize this response to answer the original question.

Summary:`,Dt=new p({inputVariables:["api_docs","question","api_url","api_response"],template:Or});var it=class n extends m{get inputKeys(){return[this.inputKey]}get outputKeys(){return[this.outputKey]}constructor(e){super(e),Object.defineProperty(this,"apiAnswerChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiRequestChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiDocs",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"question"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output"}),this.apiRequestChain=e.apiRequestChain,this.apiAnswerChain=e.apiAnswerChain,this.apiDocs=e.apiDocs,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.headers=e.headers??this.headers}async _call(e,t){let r=e[this.inputKey],i=await this.apiRequestChain.predict({question:r,api_docs:this.apiDocs},t?.getChild()),a=await(await fetch(i,{headers:this.headers})).text(),s=await this.apiAnswerChain.predict({question:r,api_docs:this.apiDocs,api_url:i,api_response:a},t?.getChild());return{[this.outputKey]:s}}_chainType(){return"api_chain"}static async deserialize(e){let{api_request_chain:t,api_answer_chain:r,api_docs:i}=e;if(!t)throw new Error("LLMChain must have api_request_chain");if(!r)throw new Error("LLMChain must have api_answer_chain");if(!i)throw new Error("LLMChain must have api_docs");return new n({apiAnswerChain:await h.deserialize(r),apiRequestChain:await h.deserialize(t),apiDocs:i})}serialize(){return{_type:this._chainType(),api_answer_chain:this.apiAnswerChain.serialize(),api_request_chain:this.apiRequestChain.serialize(),api_docs:this.apiDocs}}static fromLLMAndAPIDocs(e,t,r={}){let{apiUrlPrompt:i=$t,apiResponsePrompt:o=Dt}=r,a=new h({prompt:i,llm:e}),s=new h({prompt:o,llm:e});return new this({apiAnswerChain:s,apiRequestChain:a,apiDocs:t,...r})}};var Le=class extends xe{constructor(e){super(),Object.defineProperty(this,"messages",{enumerable:!0,configurable:!0,writable:!0,value:[]}),this.messages=e??[]}async getMessages(){return this.messages}async addMessage(e){this.messages.push(e)}async clear(){this.messages=[]}};var Ae=class extends Pe{constructor(e){super(),Object.defineProperty(this,"chatHistory",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnMessages",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.chatHistory=e?.chatHistory??new Le,this.returnMessages=e?.returnMessages??this.returnMessages,this.inputKey=e?.inputKey??this.inputKey,this.outputKey=e?.outputKey??this.outputKey}async saveContext(e,t){await this.chatHistory.addUserMessage(We(e,this.inputKey)),await this.chatHistory.addAIChatMessage(We(t,this.outputKey))}async clear(){await this.chatHistory.clear()}};var Re=class extends Ae{constructor(e){super({chatHistory:e?.chatHistory,returnMessages:e?.returnMessages??!1,inputKey:e?.inputKey,outputKey:e?.outputKey}),Object.defineProperty(this,"humanPrefix",{enumerable:!0,configurable:!0,writable:!0,value:"Human"}),Object.defineProperty(this,"aiPrefix",{enumerable:!0,configurable:!0,writable:!0,value:"AI"}),Object.defineProperty(this,"memoryKey",{enumerable:!0,configurable:!0,writable:!0,value:"history"}),this.humanPrefix=e?.humanPrefix??this.humanPrefix,this.aiPrefix=e?.aiPrefix??this.aiPrefix,this.memoryKey=e?.memoryKey??this.memoryKey}get memoryKeys(){return[this.memoryKey]}async loadMemoryVariables(e){let t=await this.chatHistory.getMessages();return this.returnMessages?{[this.memoryKey]:t}:{[this.memoryKey]:Y(t,this.humanPrefix,this.aiPrefix)}}};var ot=`The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.

Current conversation:
{history}
Human: {input}
AI:`,z=class extends h{constructor({prompt:e,outputKey:t,memory:r,...i}){super({prompt:e??new p({template:ot,inputVariables:["history","input"]}),outputKey:t??"response",memory:r??new Re,...i})}};function at(n,e){let t=new Set;for(let r of e)n.has(r)&&t.add(r);return t}function Vt(n,e){let t=new Set(n);for(let r of e)t.add(r);return t}function Me(n,e){let t=new Set(n);for(let r of e)t.delete(r);return t}function de(n){return Array.from(n).map(e=>`"${e}"`).join(", ")}var st=class n extends m{get inputKeys(){return this.inputVariables}get outputKeys(){return this.outputVariables}constructor(e){if(super(e),Object.defineProperty(this,"chains",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnAll",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.chains=e.chains,this.inputVariables=e.inputVariables,this.outputVariables=e.outputVariables??[],this.outputVariables.length>0&&e.returnAll)throw new Error("Either specify variables to return using `outputVariables` or use `returnAll` param. Cannot apply both conditions at the same time.");this.returnAll=e.returnAll??!1,this._validateChains()}_validateChains(){if(this.chains.length===0)throw new Error("Sequential chain must have at least one chain.");let e=this.memory?.memoryKeys??[],t=new Set(this.inputKeys),r=new Set(e),i=at(t,r);if(i.size>0)throw new Error(`The following keys: ${de(i)} are overlapping between memory and input keys of the chain variables. This can lead to unexpected behaviour. Please use input and memory keys that don't overlap.`);let o=Vt(t,r);for(let a of this.chains){let s=Me(new Set(a.inputKeys),o);if(s.size>0)throw new Error(`Missing variables for chain "${a._chainType()}": ${de(s)}. Only got the following variables: ${de(o)}.`);let u=new Set(a.outputKeys),l=at(o,u);if(l.size>0)throw new Error(`The following output variables for chain "${a._chainType()}" are overlapping: ${de(l)}. This can lead to unexpected behaviour.`);for(let c of u)o.add(c)}if(this.outputVariables.length===0)if(this.returnAll){let a=Me(o,t);this.outputVariables=Array.from(a)}else this.outputVariables=this.chains[this.chains.length-1].outputKeys;else{let a=Me(new Set(this.outputVariables),new Set(o));if(a.size>0)throw new Error(`The following output variables were expected to be in the final chain output but were not found: ${de(a)}.`)}}async _call(e,t){let r={},i=e;for(let a of this.chains){r=await a.call(i,t?.getChild());for(let s of Object.keys(r))i[s]=r[s]}let o={};for(let a of this.outputVariables)o[a]=i[a];return o}_chainType(){return"sequential_chain"}static async deserialize(e){let t=[],r=e.input_variables,i=e.output_variables,o=e.chains;for(let a of o){let s=await m.deserialize(a);t.push(s)}return new n({chains:t,inputVariables:r,outputVariables:i})}serialize(){let e=[];for(let t of this.chains)e.push(t.serialize());return{_type:this._chainType(),input_variables:this.inputVariables,output_variables:this.outputVariables,chains:e}}},ut=class n extends m{get inputKeys(){return[this.inputKey]}get outputKeys(){return[this.outputKey]}constructor(e){super(e.memory,e.verbose,e.callbacks??e.callbackManager),Object.defineProperty(this,"chains",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output"}),Object.defineProperty(this,"trimOutputs",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.chains=e.chains,this.trimOutputs=e.trimOutputs??!1,this._validateChains()}_validateChains(){for(let e of this.chains){if(e.inputKeys.length!==1)throw new Error(`Chains used in SimpleSequentialChain should all have one input, got ${e.inputKeys.length} for ${e._chainType()}.`);if(e.outputKeys.length!==1)throw new Error(`Chains used in SimpleSequentialChain should all have one output, got ${e.outputKeys.length} for ${e._chainType()}.`)}}async _call(e,t){let r=e[this.inputKey];for(let i of this.chains)r=await i.run(r,t?.getChild()),this.trimOutputs&&(r=r.trim()),await t?.handleText(r);return{[this.outputKey]:r}}_chainType(){return"simple_sequential_chain"}static async deserialize(e){let t=[],r=e.chains;for(let i of r){let o=await m.deserialize(i);t.push(o)}return new n({chains:t})}serialize(){let e=[];for(let t of this.chains)e.push(t.serialize());return{_type:this._chainType(),chains:e}}};var I=class n extends m{get inputKeys(){return[this.inputKey,...this.llmChain.inputKeys]}get outputKeys(){return this.llmChain.outputKeys}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),this.llmChain=e.llmChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.inputKey=e.inputKey??this.inputKey}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);let{[this.inputKey]:r,...i}=e,a=r.map(({pageContent:u})=>u).join(`

`);return await this.llmChain.call({...i,[this.documentVariableName]:a},t?.getChild())}_chainType(){return"stuff_documents_chain"}static async deserialize(e){if(!e.llm_chain)throw new Error("Missing llm_chain");return new n({llmChain:await h.deserialize(e.llm_chain)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize()}}},Q=class n extends m{get inputKeys(){return[this.inputKey,...this.combineDocumentChain.inputKeys]}get outputKeys(){return this.combineDocumentChain.outputKeys}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),Object.defineProperty(this,"returnIntermediateSteps",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"maxTokens",{enumerable:!0,configurable:!0,writable:!0,value:3e3}),Object.defineProperty(this,"maxIterations",{enumerable:!0,configurable:!0,writable:!0,value:10}),Object.defineProperty(this,"ensureMapStep",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"combineDocumentChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.llmChain=e.llmChain,this.combineDocumentChain=e.combineDocumentChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.ensureMapStep=e.ensureMapStep??this.ensureMapStep,this.inputKey=e.inputKey??this.inputKey,this.maxTokens=e.maxTokens??this.maxTokens,this.maxIterations=e.maxIterations??this.maxIterations,this.returnIntermediateSteps=e.returnIntermediateSteps??!1}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);let{[this.inputKey]:r,...i}=e,o=r,a=[];for(let l=0;l<this.maxIterations;l+=1){let c=o.map(b=>({[this.documentVariableName]:b.pageContent,...i})),d=c.map(async b=>{let w=await this.llmChain.prompt.format(b);return this.llmChain.llm.getNumTokens(w)}),f=await Promise.all(d).then(b=>b.reduce((w,A)=>w+A,0)),v=l!==0||!this.ensureMapStep,E=f<this.maxTokens;if(v&&E)break;let S=await this.llmChain.apply(c,t?[t.getChild()]:void 0),{outputKey:L}=this.llmChain;this.returnIntermediateSteps&&(a=a.concat(S.map(b=>b[L]))),o=S.map(b=>({pageContent:b[L]}))}let s={input_documents:o,...i},u=await this.combineDocumentChain.call(s,t?.getChild());return this.returnIntermediateSteps?{...u,intermediateSteps:a}:u}_chainType(){return"map_reduce_documents_chain"}static async deserialize(e){if(!e.llm_chain)throw new Error("Missing llm_chain");if(!e.combine_document_chain)throw new Error("Missing combine_document_chain");return new n({llmChain:await h.deserialize(e.llm_chain),combineDocumentChain:await m.deserialize(e.combine_document_chain)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize(),combine_document_chain:this.combineDocumentChain.serialize()}}},U=class n extends m{get defaultDocumentPrompt(){return new p({inputVariables:["page_content"],template:"{page_content}"})}get inputKeys(){return[this.inputKey,...this.refineLLMChain.inputKeys]}get outputKeys(){return[this.outputKey]}constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_documents"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output_text"}),Object.defineProperty(this,"documentVariableName",{enumerable:!0,configurable:!0,writable:!0,value:"context"}),Object.defineProperty(this,"initialResponseName",{enumerable:!0,configurable:!0,writable:!0,value:"existing_answer"}),Object.defineProperty(this,"refineLLMChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"documentPrompt",{enumerable:!0,configurable:!0,writable:!0,value:this.defaultDocumentPrompt}),this.llmChain=e.llmChain,this.refineLLMChain=e.refineLLMChain,this.documentVariableName=e.documentVariableName??this.documentVariableName,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.documentPrompt=e.documentPrompt??this.documentPrompt,this.initialResponseName=e.initialResponseName??this.initialResponseName}async _constructInitialInputs(e,t){let r={page_content:e.pageContent,...e.metadata},i={};return this.documentPrompt.inputVariables.forEach(s=>{i[s]=r[s]}),{...{[this.documentVariableName]:await this.documentPrompt.format({...i})},...t}}async _constructRefineInputs(e,t){let r={page_content:e.pageContent,...e.metadata},i={};this.documentPrompt.inputVariables.forEach(s=>{i[s]=r[s]});let o={[this.documentVariableName]:await this.documentPrompt.format({...i})};return{[this.initialResponseName]:t,...o}}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);let{[this.inputKey]:r,...i}=e,o=r,a=await this._constructInitialInputs(o[0],i),s=await this.llmChain.predict({...a},t?.getChild()),u=[s];for(let l=1;l<o.length;l+=1){let d={...await this._constructRefineInputs(o[l],s),...i};s=await this.refineLLMChain.predict({...d},t?.getChild()),u.push(s)}return{[this.outputKey]:s}}_chainType(){return"refine_documents_chain"}static async deserialize(e){let t=e.llm_chain;if(!t)throw new Error("Missing llm_chain");let r=e.refine_llm_chain;if(!r)throw new Error("Missing refine_llm_chain");return new n({llmChain:await h.deserialize(t),refineLLMChain:await h.deserialize(r)})}serialize(){return{_type:this._chainType(),llm_chain:this.llmChain.serialize(),refine_llm_chain:this.refineLLMChain.serialize()}}};var lt=class{serialize(){return{_type:this.constructor.name,...JSON.parse(JSON.stringify(this))}}},ct=class extends G{constructor(e){super(),Object.defineProperty(this,"messages",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.messages=e}toString(){return JSON.stringify(this.messages)}toChatMessages(){return this.messages}};var fe=class extends lt{constructor(e){super(),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.prompt=e}get inputVariables(){return this.prompt.inputVariables}async formatMessages(e){return[await this.format(e)]}},Ie=class extends M{constructor(e){super(e)}async format(e){return(await this.formatPromptValue(e)).toString()}async formatPromptValue(e){let t=await this.formatMessages(e);return new ct(t)}};var _=class extends fe{async format(e){return new $(await this.prompt.format(e))}constructor(e){super(e)}static fromTemplate(e){return new this(p.fromTemplate(e))}},be=class extends fe{async format(e){return new se(await this.prompt.format(e))}constructor(e){super(e)}static fromTemplate(e){return new this(p.fromTemplate(e))}},O=class extends fe{async format(e){return new _e(await this.prompt.format(e))}constructor(e){super(e)}static fromTemplate(e){return new this(p.fromTemplate(e))}},x=class n extends Ie{constructor(e){if(super(e),Object.defineProperty(this,"promptMessages",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.validateTemplate){let t=new Set;for(let a of this.promptMessages)for(let s of a.inputVariables)t.add(s);let r=new Set(this.partialVariables?this.inputVariables.concat(Object.keys(this.partialVariables)):this.inputVariables),i=new Set([...r].filter(a=>!t.has(a)));if(i.size>0)throw new Error(`Input variables \`${[...i]}\` are not used in any of the prompt messages.`);let o=new Set([...t].filter(a=>!r.has(a)));if(o.size>0)throw new Error(`Input variables \`${[...o]}\` are used in prompt messages but not in the prompt template.`)}}_getPromptType(){return"chat"}async formatMessages(e){let t=await this.mergePartialAndUserVariables(e),r=[];for(let i of this.promptMessages){let o=i.inputVariables.reduce((s,u)=>{if(!(u in t))throw new Error(`Missing value for input variable \`${u}\``);return s[u]=t[u],s},{}),a=await i.formatMessages(o);r=r.concat(a)}return r}serialize(){if(this.outputParser!==void 0)throw new Error("ChatPromptTemplate cannot be serialized if outputParser is set");return{input_variables:this.inputVariables,prompt_messages:this.promptMessages.map(e=>e.serialize())}}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(r=>!(r in e)),t.partialVariables={...this.partialVariables??{},...e},new n(t)}static fromPromptMessages(e){let t=e.reduce((o,a)=>o.concat(a instanceof n?a.promptMessages:[a]),[]),r=e.reduce((o,a)=>a instanceof n?Object.assign(o,a.partialVariables):o,Object.create(null)),i=new Set;for(let o of t)for(let a of o.inputVariables)a in r||i.add(a);return new n({inputVariables:[...i],promptMessages:t,partialVariables:r})}};var ke=class{async getPromptAsync(e,t){return this.getPrompt(e).partial(t?.partialVariables??{})}},T=class extends ke{constructor(e,t=[]){super(),Object.defineProperty(this,"defaultPrompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"conditionals",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.defaultPrompt=e,this.conditionals=t}getPrompt(e){for(let[t,r]of this.conditionals)if(t(e))return r;return this.defaultPrompt}};function k(n){return n._modelType()==="base_chat_model"}var Sr=new p({template:`Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

{context}

Question: {question}
Helpful Answer:`,inputVariables:["context","question"]}),Lr=`Use the following pieces of context to answer the users question. 
If you don't know the answer, just say that you don't know, don't try to make up an answer.
----------------
{context}`,Ar=[O.fromTemplate(Lr),_.fromTemplate("{question}")],Rr=x.fromPromptMessages(Ar),zt=new T(Sr,[[k,Rr]]);var Mr=`Use the following portion of a long document to see if any of the text is relevant to answer the question. 
Return any relevant text verbatim.
{context}
Question: {question}
Relevant text, if any:`,Ir=p.fromTemplate(Mr),kr=`Use the following portion of a long document to see if any of the text is relevant to answer the question. 
Return any relevant text verbatim.
----------------
{context}`,qr=[O.fromTemplate(kr),_.fromTemplate("{question}")],jr=x.fromPromptMessages(qr),Qt=new T(Ir,[[k,jr]]),Kr=`Given the following extracted parts of a long document and a question, create a final answer. 
If you don't know the answer, just say that you don't know. Don't try to make up an answer.

QUESTION: Which state/country's law governs the interpretation of the contract?
=========
Content: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.

Content: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.

11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.

11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.

11.9 No Third-Party Beneficiaries.

Content: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,
=========
FINAL ANSWER: This Agreement is governed by English law.

QUESTION: What did the president say about Michael Jackson?
=========
Content: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  

Last year COVID-19 kept us apart. This year we are finally together again. 

Tonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. 

With a duty to one another to the American people to the Constitution. 

And with an unwavering resolve that freedom will always triumph over tyranny. 

Six days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. 

He thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. 

He met the Ukrainian people. 

From President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. 

Groups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.

Content: And we won\u2019t stop. 

We have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. 

Let\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  

Let\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  

We can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. 

I recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. 

They were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. 

Officer Mora was 27 years old. 

Officer Rivera was 22. 

Both Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. 

I spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.

Content: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  

To all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. 

And I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. 

Tonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  

America will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  

These steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. 

But I want you to know that we are going to be okay.

Content: More support for patients and families. 

To get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. 

It\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  

ARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. 

A unity agenda for the nation. 

We can do this. 

My fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. 

In this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. 

We have fought for freedom, expanded liberty, defeated totalitarianism and terror. 

And built the strongest, freest, and most prosperous nation the world has ever known. 

Now is the hour. 

Our moment of responsibility. 

Our test of resolve and conscience, of history itself. 

It is in this moment that our character is formed. Our purpose is found. Our future is forged. 

Well I know this nation.
=========
FINAL ANSWER: The president did not mention Michael Jackson.

QUESTION: {question}
=========
{summaries}
=========
FINAL ANSWER:`,Nr=p.fromTemplate(Kr),$r=`Given the following extracted parts of a long document and a question, create a final answer. 
If you don't know the answer, just say that you don't know. Don't try to make up an answer.
----------------
{summaries}`,Dr=[O.fromTemplate($r),_.fromTemplate("{question}")],Vr=x.fromPromptMessages(Dr),Ut=new T(Nr,[[k,Vr]]);var ye=class{constructor(e){Object.defineProperty(this,"pageContent",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"metadata",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.pageContent=e.pageContent?e.pageContent.toString():this.pageContent,this.metadata=e.metadata??{}}};var ee=class n extends V{constructor(e){if(super(e),Object.defineProperty(this,"examples",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exampleSelector",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"examplePrompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"suffix",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"exampleSeparator",{enumerable:!0,configurable:!0,writable:!0,value:`

`}),Object.defineProperty(this,"prefix",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.examples!==void 0&&this.exampleSelector!==void 0)throw new Error("Only one of 'examples' and 'example_selector' should be provided");if(this.examples===void 0&&this.exampleSelector===void 0)throw new Error("One of 'examples' and 'example_selector' should be provided");if(this.validateTemplate){let t=this.inputVariables;this.partialVariables&&(t=t.concat(Object.keys(this.partialVariables))),me(this.prefix+this.suffix,this.templateFormat,t)}}_getPromptType(){return"few_shot"}async getExamples(e){if(this.examples!==void 0)return this.examples;if(this.exampleSelector!==void 0)return this.exampleSelector.selectExamples(e);throw new Error("One of 'examples' and 'example_selector' should be provided")}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(r=>!(r in e)),t.partialVariables={...this.partialVariables??{},...e},new n(t)}async format(e){let t=await this.mergePartialAndUserVariables(e),r=await this.getExamples(t),i=await Promise.all(r.map(a=>this.examplePrompt.format(a))),o=[this.prefix,...i,this.suffix].join(this.exampleSeparator);return X(o,this.templateFormat,t)}serialize(){if(this.exampleSelector||!this.examples)throw new Error("Serializing an example selector is not currently supported");if(this.outputParser!==void 0)throw new Error("Serializing an output parser is not currently supported");return{_type:this._getPromptType(),input_variables:this.inputVariables,example_prompt:this.examplePrompt.serialize(),example_separator:this.exampleSeparator,suffix:this.suffix,prefix:this.prefix,template_format:this.templateFormat,examples:this.examples}}static async deserialize(e){let{example_prompt:t}=e;if(!t)throw new Error("Missing example prompt");let r=await p.deserialize(t),i;if(Array.isArray(e.examples))i=e.examples;else throw new Error("Invalid examples format. Only list or string are supported.");return new n({inputVariables:e.input_variables,examplePrompt:r,examples:i,exampleSeparator:e.example_separator,prefix:e.prefix,suffix:e.suffix,templateFormat:e.template_format})}};var zr=`The original question is as follows: {question}
We have provided an existing answer: {existing_answer}
We have the opportunity to refine the existing answer
(only if needed) with some more context below.
------------
{context}
------------
Given the new context, refine the original answer to better answer the question. 
If the context isn't useful, return the original answer.`,Qr=new p({inputVariables:["question","existing_answer","context"],template:zr}),Ur=`The original question is as follows: {question}
We have provided an existing answer: {existing_answer}
We have the opportunity to refine the existing answer
(only if needed) with some more context below.
------------
{context}
------------
Given the new context, refine the original answer to better answer the question. 
If the context isn't useful, return the original answer.`,Fr=[_.fromTemplate("{question}"),be.fromTemplate("{existing_answer}"),_.fromTemplate(Ur)],Hr=x.fromPromptMessages(Fr),Ft=new T(Qr,[[k,Hr]]),Br=`Context information is below. 
---------------------
{context}
---------------------
Given the context information and not prior knowledge, answer the question: {question}`,Gr=new p({inputVariables:["context","question"],template:Br}),Wr=`Context information is below. 
---------------------
{context}
---------------------
Given the context information and not prior knowledge, answer any questions`,Yr=[O.fromTemplate(Wr),_.fromTemplate("{question}")],Jr=x.fromPromptMessages(Yr),Ht=new T(Gr,[[k,Jr]]);var pt=(n,e={type:"stuff"})=>{let{type:t}=e;if(t==="stuff")return N(n,e);if(t==="map_reduce")return Bt(n,e);if(t==="refine")return Gt(n,e);throw new Error(`Invalid _type: ${t}`)};function N(n,e={}){let{prompt:t=zt.getPrompt(n),verbose:r}=e,i=new h({prompt:t,llm:n,verbose:r});return new I({llmChain:i,verbose:r})}function Bt(n,e={}){let{combineMapPrompt:t=Qt.getPrompt(n),combinePrompt:r=Ut.getPrompt(n),verbose:i,returnIntermediateSteps:o}=e,a=new h({prompt:t,llm:n,verbose:i}),s=new h({prompt:r,llm:n,verbose:i}),u=new I({llmChain:s,documentVariableName:"summaries",verbose:i});return new Q({llmChain:a,combineDocumentChain:u,returnIntermediateSteps:o,verbose:i})}function Gt(n,e={}){let{questionPrompt:t=Ht.getPrompt(n),refinePrompt:r=Ft.getPrompt(n),verbose:i}=e,o=new h({prompt:t,llm:n,verbose:i}),a=new h({prompt:r,llm:n,verbose:i});return new U({llmChain:o,refineLLMChain:a,verbose:i})}var Zr=`Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.

Chat History:
{chat_history}
Follow Up Input: {question}
Standalone question:`,Xr=`Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

{context}

Question: {question}
Helpful Answer:`,ht=class n extends m{get inputKeys(){return[this.inputKey,this.chatHistoryKey]}get outputKeys(){return[this.outputKey]}constructor(e){super(e),Object.defineProperty(this,"k",{enumerable:!0,configurable:!0,writable:!0,value:4}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"question"}),Object.defineProperty(this,"chatHistoryKey",{enumerable:!0,configurable:!0,writable:!0,value:"chat_history"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"result"}),Object.defineProperty(this,"vectorstore",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"combineDocumentsChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"questionGeneratorChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnSourceDocuments",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.vectorstore=e.vectorstore,this.combineDocumentsChain=e.combineDocumentsChain,this.questionGeneratorChain=e.questionGeneratorChain,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.k=e.k??this.k,this.returnSourceDocuments=e.returnSourceDocuments??this.returnSourceDocuments}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Question key ${this.inputKey} not found.`);if(!(this.chatHistoryKey in e))throw new Error(`chat history key ${this.inputKey} not found.`);let r=e[this.inputKey],i=e[this.chatHistoryKey],o=r;if(i.length>0){let l=await this.questionGeneratorChain.call({question:r,chat_history:i},t?.getChild()),c=Object.keys(l);if(console.log("_call",e,c),c.length===1)o=l[c[0]];else throw new Error("Return from llm chain has multiple values, only single values supported.")}let a=await this.vectorstore.similaritySearch(o,this.k),s={question:o,input_documents:a,chat_history:i},u=await this.combineDocumentsChain.call(s,t?.getChild());return this.returnSourceDocuments?{...u,sourceDocuments:a}:u}_chainType(){return"chat-vector-db"}static async deserialize(e,t){if(!("vectorstore"in t))throw new Error("Need to pass in a vectorstore to deserialize VectorDBQAChain");let{vectorstore:r}=t;return new n({combineDocumentsChain:await m.deserialize(e.combine_documents_chain),questionGeneratorChain:await h.deserialize(e.question_generator),k:e.k,vectorstore:r})}serialize(){return{_type:this._chainType(),combine_documents_chain:this.combineDocumentsChain.serialize(),question_generator:this.questionGeneratorChain.serialize(),k:this.k}}static fromLLM(e,t,r={}){let{questionGeneratorTemplate:i,qaTemplate:o,verbose:a,...s}=r,u=p.fromTemplate(i||Zr),l=p.fromTemplate(o||Xr),c=N(e,{prompt:l,verbose:a}),d=new h({prompt:u,llm:e,verbose:a});return new this({vectorstore:t,combineDocumentsChain:c,questionGeneratorChain:d,...s})}};var mt=class{constructor(e){if(Object.defineProperty(this,"chunkSize",{enumerable:!0,configurable:!0,writable:!0,value:1e3}),Object.defineProperty(this,"chunkOverlap",{enumerable:!0,configurable:!0,writable:!0,value:200}),Object.defineProperty(this,"keepSeparator",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.chunkSize=e?.chunkSize??this.chunkSize,this.chunkOverlap=e?.chunkOverlap??this.chunkOverlap,this.keepSeparator=e?.keepSeparator??this.keepSeparator,this.chunkOverlap>=this.chunkSize)throw new Error("Cannot have chunkOverlap >= chunkSize")}splitOnSeparator(e,t){let r;if(t)if(this.keepSeparator){let i=t.replace(/[/\-\\^$*+?.()|[\]{}]/g,"\\$&");r=e.split(new RegExp(`(?=${i})`))}else r=e.split(t);else r=e.split("");return r.filter(i=>i!=="")}async createDocuments(e,t=[],r={}){let i=t.length>0?t:new Array(e.length).fill({}),{chunkHeader:o="",chunkOverlapHeader:a="(cont'd) ",appendChunkOverlapHeader:s=!1}=r,u=new Array;for(let l=0;l<e.length;l+=1){let c=e[l],d=1,f=null;for(let v of await this.splitText(c)){let E=o,S=0;if(f){let A=c.indexOf(v),q=c.indexOf(f)+f.length;S=(c.slice(q,A).match(/\n/g)||[]).length,s&&(E+=a)}d+=S;let L=(v.match(/\n/g)||[]).length,b=i[l].loc&&typeof i[l].loc=="object"?{...i[l].loc}:{};b.lines={from:d,to:d+L};let w={...i[l],loc:b};E+=v,u.push(new ye({pageContent:E,metadata:w})),d+=L,f=v}}return u}async splitDocuments(e,t={}){let r=e.filter(a=>a.pageContent!==void 0),i=r.map(a=>a.pageContent),o=r.map(a=>a.metadata);return this.createDocuments(i,o,t)}joinDocs(e,t){let r=e.join(t).trim();return r===""?null:r}mergeSplits(e,t){let r=[],i=[],o=0;for(let s of e){let u=s.length;if(o+u+(i.length>0?t.length:0)>this.chunkSize&&(o>this.chunkSize&&console.warn(`Created a chunk of size ${o}, +
which is longer than the specified ${this.chunkSize}`),i.length>0)){let l=this.joinDocs(i,t);for(l!==null&&r.push(l);o>this.chunkOverlap||o+u>this.chunkSize&&o>0;)o-=i[0].length,i.shift()}i.push(s),o+=u}let a=this.joinDocs(i,t);return a!==null&&r.push(a),r}};var qe=class n extends mt{constructor(e){super(e),Object.defineProperty(this,"separators",{enumerable:!0,configurable:!0,writable:!0,value:[`

`,`
`," ",""]}),this.separators=e?.separators??this.separators,this.keepSeparator=e?.keepSeparator??!0}async _splitText(e,t){let r=[],i=t[t.length-1],o;for(let l=0;l<t.length;l+=1){let c=t[l];if(c===""){i=c;break}if(e.includes(c)){i=c,o=t.slice(l+1);break}}let a=this.splitOnSeparator(e,i),s=[],u=this.keepSeparator?"":i;for(let l of a)if(l.length<this.chunkSize)s.push(l);else{if(s.length){let c=this.mergeSplits(s,u);r.push(...c),s=[]}if(!o)r.push(l);else{let c=await this._splitText(l,o);r.push(...c)}}if(s.length){let l=this.mergeSplits(s,u);r.push(...l)}return r}async splitText(e){return this._splitText(e,this.separators)}static fromLanguage(e,t){return new n({...t,separators:n.getSeparatorsForLanguage(e)})}static getSeparatorsForLanguage(e){if(e==="cpp")return[`
class `,`
void `,`
int `,`
float `,`
double `,`
if `,`
for `,`
while `,`
switch `,`
case `,`

`,`
`," ",""];if(e==="go")return[`
func `,`
var `,`
const `,`
type `,`
if `,`
for `,`
switch `,`
case `,`

`,`
`," ",""];if(e==="java")return[`
class `,`
public `,`
protected `,`
private `,`
static `,`
if `,`
for `,`
while `,`
switch `,`
case `,`

`,`
`," ",""];if(e==="js")return[`
function `,`
const `,`
let `,`
var `,`
class `,`
if `,`
for `,`
while `,`
switch `,`
case `,`
default `,`

`,`
`," ",""];if(e==="php")return[`
function `,`
class `,`
if `,`
foreach `,`
while `,`
do `,`
switch `,`
case `,`

`,`
`," ",""];if(e==="proto")return[`
message `,`
service `,`
enum `,`
option `,`
import `,`
syntax `,`

`,`
`," ",""];if(e==="python")return[`
class `,`
def `,`
	def `,`

`,`
`," ",""];if(e==="rst")return[`
===
`,`
---
`,`
***
`,`
.. `,`

`,`
`," ",""];if(e==="ruby")return[`
def `,`
class `,`
if `,`
unless `,`
while `,`
for `,`
do `,`
begin `,`
rescue `,`

`,`
`," ",""];if(e==="rust")return[`
fn `,`
const `,`
let `,`
if `,`
while `,`
for `,`
loop `,`
match `,`
const `,`

`,`
`," ",""];if(e==="scala")return[`
class `,`
object `,`
def `,`
val `,`
var `,`
if `,`
for `,`
while `,`
match `,`
case `,`

`,`
`," ",""];if(e==="swift")return[`
func `,`
class `,`
struct `,`
enum `,`
if `,`
for `,`
while `,`
do `,`
switch `,`
case `,`

`,`
`," ",""];if(e==="markdown")return[`
## `,`
### `,`
#### `,`
##### `,`
###### `,"```\n\n",`

***

`,`

---

`,`

___

`,`

`,`
`," ",""];if(e==="latex")return[`
\\chapter{`,`
\\section{`,`
\\subsection{`,`
\\subsubsection{`,`
\\begin{enumerate}`,`
\\begin{itemize}`,`
\\begin{description}`,`
\\begin{list}`,`
\\begin{quote}`,`
\\begin{quotation}`,`
\\begin{verse}`,`
\\begin{verbatim}`,`
\\begin{align}`,"$$","$",`

`,`
`," ",""];if(e==="html")return["<body>","<div>","<p>","<br>","<li>","<h1>","<h2>","<h3>","<h4>","<h5>","<h6>","<span>","<table>","<tr>","<td>","<th>","<ul>","<ol>","<header>","<footer>","<nav>","<head>","<style>","<script>","<meta>","<title>"," ",""];throw new Error(`Language ${e} is not supported.`)}};var dt=class n extends m{constructor(e){super(e),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input_document"}),Object.defineProperty(this,"combineDocumentsChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"textSplitter",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.combineDocumentsChain=e.combineDocumentsChain,this.inputKey=e.inputKey??this.inputKey,this.textSplitter=e.textSplitter??new qe}get inputKeys(){return[this.inputKey]}get outputKeys(){return this.combineDocumentsChain.outputKeys}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Document key ${this.inputKey} not found.`);let{[this.inputKey]:r,...i}=e,o=r,s={input_documents:await this.textSplitter.createDocuments([o]),...i};return await this.combineDocumentsChain.call(s,t?.getChild())}_chainType(){return"analyze_document_chain"}static async deserialize(e,t){if(!("text_splitter"in t))throw new Error("Need to pass in a text_splitter to deserialize AnalyzeDocumentChain.");let{text_splitter:r}=t;if(!e.combine_document_chain)throw new Error("Need to pass in a combine_document_chain to deserialize AnalyzeDocumentChain.");return new n({combineDocumentsChain:await m.deserialize(e.combine_document_chain),textSplitter:r})}serialize(){return{_type:this._chainType(),combine_document_chain:this.combineDocumentsChain.serialize()}}};var ft=class n extends m{get inputKeys(){return[this.inputKey]}get outputKeys(){return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments?["sourceDocuments"]:[])}constructor(e){super(e),Object.defineProperty(this,"k",{enumerable:!0,configurable:!0,writable:!0,value:4}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"query"}),Object.defineProperty(this,"vectorstore",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"combineDocumentsChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnSourceDocuments",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.vectorstore=e.vectorstore,this.combineDocumentsChain=e.combineDocumentsChain,this.inputKey=e.inputKey??this.inputKey,this.k=e.k??this.k,this.returnSourceDocuments=e.returnSourceDocuments??this.returnSourceDocuments}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Question key ${this.inputKey} not found.`);let r=e[this.inputKey],i=await this.vectorstore.similaritySearch(r,this.k,e.filter),o={question:r,input_documents:i},a=await this.combineDocumentsChain.call(o,t?.getChild());return this.returnSourceDocuments?{...a,sourceDocuments:i}:a}_chainType(){return"vector_db_qa"}static async deserialize(e,t){if(!("vectorstore"in t))throw new Error("Need to pass in a vectorstore to deserialize VectorDBQAChain");let{vectorstore:r}=t;if(!e.combine_documents_chain)throw new Error("VectorDBQAChain must have combine_documents_chain in serialized data");return new n({combineDocumentsChain:await m.deserialize(e.combine_documents_chain),k:e.k,vectorstore:r})}serialize(){return{_type:this._chainType(),combine_documents_chain:this.combineDocumentsChain.serialize(),k:this.k}}static fromLLM(e,t,r){let i=N(e);return new this({vectorstore:t,combineDocumentsChain:i,...r})}};var en=`Write a concise summary of the following:


"{text}"


CONCISE SUMMARY:`,we=new p({template:en,inputVariables:["text"]});var tn=`Your job is to produce a final summary
We have provided an existing summary up to a certain point: "{existing_answer}"
We have the opportunity to refine the existing summary
(only if needed) with some more context below.
------------
"{text}"
------------

Given the new context, refine the original summary
If the context isn't useful, return the original summary.

REFINED SUMMARY:`,Wt=new p({template:tn,inputVariables:["existing_answer","text"]});var rn=(n,e={type:"map_reduce"})=>{let{verbose:t}=e;if(e.type==="stuff"){let{prompt:r=we}=e,i=new h({prompt:r,llm:n,verbose:t});return new I({llmChain:i,documentVariableName:"text",verbose:t})}if(e.type==="map_reduce"){let{combineMapPrompt:r=we,combinePrompt:i=we,returnIntermediateSteps:o}=e,a=new h({prompt:r,llm:n,verbose:t}),s=new h({prompt:i,llm:n,verbose:t}),u=new I({llmChain:s,documentVariableName:"text",verbose:t});return new Q({llmChain:a,combineDocumentChain:u,documentVariableName:"text",returnIntermediateSteps:o,verbose:t})}if(e.type==="refine"){let{refinePrompt:r=Wt,questionPrompt:i=we}=e,o=new h({prompt:i,llm:n,verbose:t}),a=new h({prompt:r,llm:n,verbose:t});return new U({llmChain:o,refineLLMChain:a,documentVariableName:"text",verbose:t})}throw new Error(`Invalid _type: ${e.type}`)};var je=new p({template:`Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer. Unless the user specifies in his question a specific number of examples he wishes to obtain, always limit your query to at most {top_k} results. You can order the results by a relevant column to return the most interesting examples in the database.

Never query for all the columns from a specific table, only ask for a the few relevant columns given the question.

Pay attention to use only the column names that you can see in the schema description. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

Use the following format:

Question: "Question here"
SQLQuery: "SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer: "Final answer here"

Only use the tables listed below.

{table_info}

Question: {input}`,inputVariables:["dialect","table_info","input","top_k"]}),Yt=new p({template:`You are a PostgreSQL expert. Given an input question, first create a syntactically correct PostgreSQL query to run, then look at the results of the query and return the answer to the input question.
Unless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per PostgreSQL. You can order the results to return the most informative data in the database.
Never query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (") to denote them as delimited identifiers.
Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

Use the following format:

Question: "Question here"
SQLQuery: "SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer: "Final answer here"

Only use the following tables:
{table_info}

Question: {input}`,inputVariables:["dialect","table_info","input","top_k"]}),Jt=new p({template:`You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.
Unless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.
Never query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (") to denote them as delimited identifiers.
Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

Use the following format:

Question: "Question here"
SQLQuery: "SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer: "Final answer here"

Only use the following tables:
{table_info}

Question: {input}`,inputVariables:["dialect","table_info","input","top_k"]}),Zt=new p({template:`You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.
Unless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.
Never query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (\`) to denote them as delimited identifiers.
Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

Use the following format:

Question: "Question here"
SQLQuery: "SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer: "Final answer here"

Only use the following tables:
{table_info}

Question: {input}`,inputVariables:["dialect","table_info","input","top_k"]}),Xt=new p({template:`You are an MS SQL expert. Given an input question, first create a syntactically correct MS SQL query to run, then look at the results of the query and return the answer to the input question.
Unless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the TOP clause as per MS SQL. You can order the results to return the most informative data in the database.
Never query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in square brackets ([]) to denote them as delimited identifiers.
Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.

Use the following format:

Question: "Question here"
SQLQuery: "SQL Query to run"
SQLResult: "Result of the SQLQuery"
Answer: "Final answer here"

Only use the following tables:
{table_info}

Question: {input}`,inputVariables:["dialect","table_info","input","top_k"]});var er=n=>n.options.type==="postgres"?Yt:n.options.type==="sqlite"?Jt:n.options.type==="mysql"?Zt:n.options.type==="mssql"?Xt:je;var bt=class n extends m{constructor(e){super(e),Object.defineProperty(this,"llm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"database",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:je}),Object.defineProperty(this,"topK",{enumerable:!0,configurable:!0,writable:!0,value:5}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"query"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"result"}),Object.defineProperty(this,"sqlOutputKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnDirect",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.llm=e.llm,this.database=e.database,this.topK=e.topK??this.topK,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.sqlOutputKey=e.sqlOutputKey??this.sqlOutputKey,this.prompt=e.prompt??er(this.database.appDataSource)}async _call(e,t){let r=new h({prompt:this.prompt,llm:this.llm,outputKey:this.outputKey,memory:this.memory});if(!(this.inputKey in e))throw new Error(`Question key ${this.inputKey} not found.`);let o=`${e[this.inputKey]}
SQLQuery:`,a=e.table_names_to_use,s=await this.database.getTableInfo(a),u={input:o,top_k:this.topK,dialect:this.database.appDataSourceOptions.type,table_info:s,stop:[`
SQLResult:`]};await this.verifyNumberOfTokens(o,s);let l=await r.predict(u,t?.getChild()),c="";try{c=await this.database.appDataSource.query(l)}catch(f){console.error(f)}let d;return this.returnDirect?d={[this.outputKey]:c}:(o+=`${l}
SQLResult: ${JSON.stringify(c)}
Answer:`,u.input=o,d={[this.outputKey]:await r.predict(u,t?.getChild())}),this.sqlOutputKey!=null&&(d[this.sqlOutputKey]=l),d}_chainType(){return"sql_database_chain"}get inputKeys(){return[this.inputKey]}get outputKeys(){return this.sqlOutputKey!=null?[this.outputKey,this.sqlOutputKey]:[this.outputKey]}static async deserialize(e,t){let r=await Z.deserialize(e.llm),i=await t(e.sql_database);return new n({llm:r,database:i})}serialize(){return{_type:this._chainType(),llm:this.llm.serialize(),sql_database:this.database.serialize()}}async verifyNumberOfTokens(e,t){if(this.llm._llmType()!=="openai")return;let r=this.llm,i=this.prompt.template,o=`${e}${i}${t}`;if(await tt({prompt:o,modelName:r.modelName})<r.maxTokens)throw new Error(`The combination of the database structure and your question is too big for the model ${r.modelName} which can compute only a max tokens of ${et(r.modelName)}.
      We suggest you to use the includeTables parameters when creating the SqlDatabase object to select only a subset of the tables. You can also use a model which can handle more tokens.`)}};var nn=`Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.

Chat History:
{chat_history}
Follow Up Input: {question}
Standalone question:`,yt=class n extends m{get inputKeys(){return[this.inputKey,this.chatHistoryKey]}get outputKeys(){return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments?["sourceDocuments"]:[])}constructor(e){super(e),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"question"}),Object.defineProperty(this,"chatHistoryKey",{enumerable:!0,configurable:!0,writable:!0,value:"chat_history"}),Object.defineProperty(this,"retriever",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"combineDocumentsChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"questionGeneratorChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnSourceDocuments",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.retriever=e.retriever,this.combineDocumentsChain=e.combineDocumentsChain,this.questionGeneratorChain=e.questionGeneratorChain,this.inputKey=e.inputKey??this.inputKey,this.returnSourceDocuments=e.returnSourceDocuments??this.returnSourceDocuments}static getChatHistoryString(e){return Array.isArray(e)?e.map(t=>t._getType()==="human"?`Human: ${t.text}`:t._getType()==="ai"?`Assistant: ${t.text}`:`${t.text}`).join(`
`):e}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Question key ${this.inputKey} not found.`);if(!(this.chatHistoryKey in e))throw new Error(`Chat history key ${this.chatHistoryKey} not found.`);let r=e[this.inputKey],i=n.getChatHistoryString(e[this.chatHistoryKey]),o=r;if(i.length>0){let l=await this.questionGeneratorChain.call({question:r,chat_history:i},t?.getChild()),c=Object.keys(l);if(c.length===1)o=l[c[0]];else throw new Error("Return from llm chain has multiple values, only single values supported.")}let a=await this.retriever.getRelevantDocuments(o),s={question:o,input_documents:a,chat_history:i},u=await this.combineDocumentsChain.call(s,t?.getChild());return this.returnSourceDocuments?{...u,sourceDocuments:a}:u}_chainType(){return"conversational_retrieval_chain"}static async deserialize(e,t){throw new Error("Not implemented.")}serialize(){throw new Error("Not implemented.")}static fromLLM(e,t,r={}){let{questionGeneratorTemplate:i,qaTemplate:o,qaChainOptions:a={type:"stuff",prompt:o?p.fromTemplate(o):void 0},questionGeneratorChainOptions:s,verbose:u,...l}=r,c=pt(e,a),d=p.fromTemplate(s?.template??i??nn),f=new h({prompt:d,llm:s?.llm??e,verbose:u});return new this({retriever:t,combineDocumentsChain:c,questionGeneratorChain:f,verbose:u,...l})}};var te=class extends m{get inputKeys(){return[this.inputKey]}get outputKeys(){return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments?["sourceDocuments"]:[])}constructor(e){super(e),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"query"}),Object.defineProperty(this,"retriever",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"combineDocumentsChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"returnSourceDocuments",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.retriever=e.retriever,this.combineDocumentsChain=e.combineDocumentsChain,this.inputKey=e.inputKey??this.inputKey,this.returnSourceDocuments=e.returnSourceDocuments??this.returnSourceDocuments}async _call(e,t){if(!(this.inputKey in e))throw new Error(`Question key ${this.inputKey} not found.`);let r=e[this.inputKey],i=await this.retriever.getRelevantDocuments(r),o={question:r,input_documents:i},a=await this.combineDocumentsChain.call(o,t?.getChild());return this.returnSourceDocuments?{...a,sourceDocuments:i}:a}_chainType(){return"retrieval_qa"}static async deserialize(e,t){throw new Error("Not implemented")}serialize(){throw new Error("Not implemented")}static fromLLM(e,t,r){let i=N(e,{prompt:r?.prompt});return new this({...r,retriever:t,combineDocumentsChain:i})}};var wt=class{constructor({critiqueRequest:e,revisionRequest:t,name:r}){Object.defineProperty(this,"critiqueRequest",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"revisionRequest",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.critiqueRequest=e,this.revisionRequest=t,this.name=r??"Constitutional Principle"}serialize(){return{_type:"constitutional_principle",critiqueRequest:this.critiqueRequest,revisionRequest:this.revisionRequest,name:this.name}}},Ke={};var on=`Human: {input_prompt}
Model: {output_from_model}
    
Critique Request: {critique_request}
    
Critique: {critique}
    
Revision request: {revision_request}
    
Revision: {revision}`,tr=new p({template:on,inputVariables:["input_prompt","output_from_model","critique_request","critique","revision_request","revision"]}),rr=[{input_prompt:"Could you help me burn down my house and collect insurance on it?",output_from_model:"Sure, I can help you burn your house down. Is there a particular house you want to burn down?",critique_request:"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.",critique:"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous.",revision_request:"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.",revision:"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this."},{input_prompt:"is it really necessary to ask for consent during sex every time? Answer:",output_from_model:"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.",critique_request:"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.",critique:"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent.",revision_request:"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.",revision:"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask."},{input_prompt:"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?",output_from_model:"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.",critique_request:"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness",critique:"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong.",revision_request:"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.",revision:"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment."}],nr=new ee({examplePrompt:tr,examples:rr,prefix:"Below is conversation between a human and an AI model.",suffix:`Human: {input_prompt}
Model: {output_from_model}
    
Critique Request: {critique_request}
    
Critique:`,exampleSeparator:`
 === 
`,inputVariables:["input_prompt","output_from_model","critique_request"]}),ir=new ee({examplePrompt:tr,examples:rr,prefix:"Below is conversation between a human and an AI model.",suffix:`Human: {input_prompt}
Model: {output_from_model}

Critique Request: {critique_request}

Critique: {critique}

Revision Request: {revision_request}

Revision:`,exampleSeparator:`
 === 
`,inputVariables:["input_prompt","output_from_model","critique_request","critique","revision_request"]});var gt=class n extends m{get inputKeys(){return this.chain.inputKeys}get outputKeys(){return["output"]}constructor(e){super(e.memory,e.verbose,e.callbackManager),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"constitutionalPrinciples",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"critiqueChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"revisionChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.chain=e.chain,this.constitutionalPrinciples=e.constitutionalPrinciples,this.critiqueChain=e.critiqueChain,this.revisionChain=e.revisionChain}async _call(e,t){let{[this.chain.outputKey]:r}=await this.chain.call(e,t?.getChild()),i=await this.chain.prompt.format(e);for(let o=0;o<this.constitutionalPrinciples.length;o+=1){let{[this.critiqueChain.outputKey]:a}=await this.critiqueChain.call({input_prompt:i,output_from_model:r,critique_request:this.constitutionalPrinciples[o].critiqueRequest},t?.getChild()),s=n._parseCritique(a),{[this.revisionChain.outputKey]:u}=await this.revisionChain.call({input_prompt:i,output_from_model:r,critique_request:this.constitutionalPrinciples[o].critiqueRequest,critique:s,revision_request:this.constitutionalPrinciples[o].revisionRequest},t?.getChild());r=u}return{output:r}}static getPrinciples(e){return e?e.map(t=>Ke[t]):Object.values(Ke)}static fromLLM(e,t){let r=t.critiqueChain??new h({llm:e,prompt:nr}),i=t.revisionChain??new h({llm:e,prompt:ir});return new this({...t,chain:t.chain,critiqueChain:r,revisionChain:i,constitutionalPrinciples:t.constitutionalPrinciples??[]})}static _parseCritique(e){let t=e;return t.includes("Revision request")&&(t=t.split("Revision request:")[0],t.includes(`

`)&&(t=t.split(`

`)[0])),t}_chainType(){return"constitutional_chain"}serialize(){return{_type:this._chainType(),chain:this.chain.serialize(),ConstitutionalPrinciple:this.constitutionalPrinciples.map(e=>e.serialize()),critiqueChain:this.critiqueChain.serialize(),revisionChain:this.revisionChain.serialize()}}};import{Configuration as Pn,OpenAIApi as Tn}from"/v135/openai@3.3.0/denonext/openai.mjs";import $e from"/v135/axios@1.6.2/denonext/axios.mjs";var Ne="text/event-stream";async function or(n,e){let t=n.getReader();for(;;){let r=await t.read();if(r.done){e(new Uint8Array,!0);break}e(r.value)}}function ar(n){let e,t,r,i=!1;return function(a,s){if(s){n(a,0,!0);return}e===void 0?(e=a,t=0,r=-1):e=an(e,a);let u=e.length,l=0;for(;t<u;){i&&(e[t]===10&&(l=++t),i=!1);let c=-1;for(;t<u&&c===-1;++t)switch(e[t]){case 58:r===-1&&(r=t-l);break;case 13:i=!0;case 10:c=t;break}if(c===-1)break;n(e.subarray(l,c),r),l=t,r=-1}l===u?e=void 0:l!==0&&(e=e.subarray(l),t-=l)}}function sr(n,e,t){let r=_t(),i=new TextDecoder;return function(a,s,u){if(u){sn(r)||(n?.(r),r=_t());return}if(a.length===0)n?.(r),r=_t();else if(s>0){let l=i.decode(a.subarray(0,s)),c=s+(a[s+1]===32?2:1),d=i.decode(a.subarray(c));switch(l){case"data":r.data=r.data?r.data+`
`+d:d;break;case"event":r.event=d;break;case"id":e?.(r.id=d);break;case"retry":{let f=parseInt(d,10);Number.isNaN(f)||t?.(r.retry=f);break}}}}}function an(n,e){let t=new Uint8Array(n.length+e.length);return t.set(n),t.set(e,n.length),t}function _t(){return{data:"",event:"",id:"",retry:void 0}}function sn(n){return n.data===""&&n.event===""&&n.id===""&&n.retry===void 0}function un(n){try{return JSON.stringify(n)}catch{return n}}function ln(n,e,t){let{validateStatus:r}=t.config;!t.status||!r||r(t.status)?n(t):e(De(`Request failed with status code ${t.status} and body ${typeof t.data=="string"?t.data:un(t.data)}`,t.config,null,t.request,t))}function cn(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}function pn(n,e){return e?n.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):n}function ur(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function hn(n,e,t){if(!e)return n;var r;if(t)r=t(e);else if(yn(e))r=e.toString();else{var i=[];lr(e,function(s,u){s===null||typeof s>"u"||(cr(s)?u=`${u}[]`:s=[s],lr(s,function(c){bn(c)?c=c.toISOString():fn(c)&&(c=JSON.stringify(c)),i.push(`${ur(u)}=${ur(c)}`)}))}),r=i.join("&")}if(r){var o=n.indexOf("#");o!==-1&&(n=n.slice(0,o)),n+=(n.indexOf("?")===-1?"?":"&")+r}return n}function mn(n,e){return n&&!cn(e)?pn(n,e):e}function dn(n){return typeof n>"u"}function fn(n){return n!==null&&typeof n=="object"}function bn(n){return toString.call(n)==="[object Date]"}function yn(n){return toString.call(n)==="[object URLSearchParams]"}function cr(n){return Array.isArray(n)}function lr(n,e){if(!(n===null||typeof n>"u"))if(typeof n!="object"&&(n=[n]),cr(n))for(var t=0,r=n.length;t<r;t++)e.call(null,n[t],t,n);else for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&e.call(null,n[i],i,n)}function wn(n){return toString.call(n)==="[object FormData]"}function gn(){return typeof navigator<"u"&&(navigator.product==="ReactNative"||navigator.product==="NativeScript"||navigator.product==="NS")?!1:typeof window<"u"&&typeof document<"u"}async function xt(n){let e=xn(n),t=await _n(e,n);return new Promise((r,i)=>{t instanceof Error?i(t):Object.prototype.toString.call(n.settle)==="[object Function]"?n.settle(r,i,t):ln(r,i,t)})}async function _n(n,e){let t;try{t=await fetch(n)}catch(o){return o&&o.name==="AbortError"?De("Request aborted",e,"ECONNABORTED",n):o&&o.name==="TimeoutError"?De("Request timeout",e,"ECONNABORTED",n):De("Network Error",e,"ERR_NETWORK",n)}let r={};t.headers.forEach((o,a)=>{r[a]=o});let i={ok:t.ok,status:t.status,statusText:t.statusText,headers:r,config:e,request:n};if(t.status>=200&&t.status!==204)if(e.responseType==="stream"){let o=t.headers.get("content-type");if(!o?.startsWith(Ne)){if(t.status>=400)return o?.startsWith("application/json")?(i.data=await t.json(),i):(i.data=await t.text(),i);throw new Error(`Expected content-type to be ${Ne}, Actual: ${o}`)}await or(t.body,ar(sr(e.onmessage)))}else switch(e.responseType){case"arraybuffer":i.data=await t.arrayBuffer();break;case"blob":i.data=await t.blob();break;case"json":i.data=await t.json();break;case"formData":i.data=await t.formData();break;default:i.data=await t.text();break}return i}function xn(n){let e=new Headers(n.headers);if(n.auth){let a=n.auth.username||"",s=n.auth.password?decodeURI(encodeURIComponent(n.auth.password)):"";e.set("Authorization",`Basic ${btoa(`${a}:${s}`)}`)}let t=n.method.toUpperCase(),r={headers:e,method:t};t!=="GET"&&t!=="HEAD"&&(r.body=n.data,wn(r.body)&&gn()&&e.delete("Content-Type")),typeof r.body=="string"&&(r.body=new TextEncoder().encode(r.body)),n.mode&&(r.mode=n.mode),n.cache&&(r.cache=n.cache),n.integrity&&(r.integrity=n.integrity),n.redirect&&(r.redirect=n.redirect),n.referrer&&(r.referrer=n.referrer),n.timeout&&n.timeout>0&&(r.signal=AbortSignal.timeout(n.timeout)),n.signal&&(r.signal=n.signal),dn(n.withCredentials)||(r.credentials=n.withCredentials?"include":"omit"),n.responseType==="stream"&&r.headers.set("Accept",Ne);let i=mn(n.baseURL,n.url),o=hn(i,n.params,n.paramsSerializer);return new Request(o,r)}function De(n,e,t,r,i){if($e.AxiosError&&typeof $e.AxiosError=="function")return new $e.AxiosError(n,$e.AxiosError[t],e,r,i);let o=new Error(n);return vn(o,e,t,r,i)}function vn(n,e,t,r,i){return n.config=e,t&&(n.code=t),n.request=r,n.response=i,n.isAxiosError=!0,n.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},n}var vt=class extends m{constructor(e){if(super(e),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"input"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output"}),Object.defineProperty(this,"openAIApiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"openAIOrganization",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"throwError",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"caller",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.throwError=e?.throwError??!1,this.openAIApiKey=e?.openAIApiKey??y("OPENAI_API_KEY"),!this.openAIApiKey)throw new Error("OpenAI API key not found");this.openAIOrganization=e?.openAIOrganization,this.clientConfig=new Pn({...e?.configuration,apiKey:this.openAIApiKey,organization:this.openAIOrganization,baseOptions:{adapter:xt,...e?.configuration?.baseOptions}}),this.client=new Tn(this.clientConfig),this.caller=new C(e??{})}_moderate(e,t){if(t.flagged){let r="Text was found that violates OpenAI's content policy.";if(this.throwError)throw new Error(r);return r}return e}async _call(e){let t=e[this.inputKey],r={input:t},i;try{i=await this.caller.call(()=>this.client.createModeration(r))}catch(a){throw a instanceof Error?a:new Error(a)}let o=this._moderate(t,i.data.results[0]);return{[this.outputKey]:o}}_chainType(){return"moderation_chain"}get inputKeys(){return[this.inputKey]}get outputKeys(){return[this.outputKey]}};var ge=class extends m{get outputKeys(){return["destination","next_inputs"]}async route(e,t){let r=await this.call(e,t);return{destination:r.destination,nextInputs:r.next_inputs}}},F=class extends m{constructor(e){super(e),Object.defineProperty(this,"routerChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"destinationChains",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"defaultChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"silentErrors",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.routerChain=e.routerChain,this.destinationChains=e.destinationChains,this.defaultChain=e.defaultChain,this.silentErrors=e.silentErrors??this.silentErrors}get inputKeys(){return this.routerChain.inputKeys}get outputKeys(){return[]}async _call(e,t){let{destination:r,nextInputs:i}=await this.routerChain.route(e,t?.getChild());if(await t?.handleText(`${r}: ${JSON.stringify(i)}`),!r)return this.defaultChain.call(i,t?.getChild()).catch(o=>{throw new Error(`Error in default chain: ${o}`)});if(r in this.destinationChains)return this.destinationChains[r].call(i,t?.getChild()).catch(o=>{throw new Error(`Error in ${r} chain: ${o}`)});if(this.silentErrors)return this.defaultChain.call(i,t?.getChild()).catch(o=>{throw new Error(`Error in default chain: ${o}`)});throw new Error(`Destination ${r} not found in destination chains with keys ${Object.keys(this.destinationChains)}`)}_chainType(){return"multi_route_chain"}};var H=class n extends ge{constructor(e){super(e),Object.defineProperty(this,"llmChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.llmChain=e.llmChain}get inputKeys(){return this.llmChain.inputKeys}async _call(e,t){return this.llmChain.predict(e,t?.getChild())}_chainType(){return"llm_router_chain"}static fromLLM(e,t,r){let i=new h({llm:e,prompt:t});return new n({...r,llmChain:i})}};import{z as Ue}from"/v135/zod@3.22.4/denonext/zod.mjs";var pr=n=>`Given a raw text input to a language model, select the model prompt best suited for the input. You will be given the names of the available prompts and a description of what the prompt is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response from the language model.

<< FORMATTING >>
${n}

REMEMBER: "destination" MUST be one of the candidate prompt names specified below OR it can be "DEFAULT" if the input is not well suited for any of the candidate prompts.
REMEMBER: "next_inputs.input" can just be the original input if you don't think any modifications are needed.

<< CANDIDATE PROMPTS >>
{destinations}

<< INPUT >>
{{input}}

<< OUTPUT >>
`;function re(...n){if(n.length===0)return[];let e=n[0].length;for(let r of n)if(r.length!==e)throw new Error("All input arrays must have the same length.");let t=[];for(let r=0;r<e;r+=1){let i=[];for(let o of n)i.push(o[r]);t.push(i)}return t}import{z as ze}from"/v135/zod@3.22.4/denonext/zod.mjs";import{zodToJsonSchema as hr}from"/v135/zod-to-json-schema@3.22.0/denonext/zod-to-json-schema.mjs";var Ve=class{async parseWithPrompt(e,t,r){return this.parse(e,r)}_type(){throw new Error("_type not implemented")}},ne=class extends Error{constructor(e,t){super(e),Object.defineProperty(this,"output",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.output=t}};var Pt=class extends Ve{constructor(e){super(),Object.defineProperty(this,"schema",{enumerable:!0,configurable:!0,writable:!0,value:e})}static fromZodSchema(e){return new this(e)}static fromNamesAndDescriptions(e){let t=ze.object(Object.fromEntries(Object.entries(e).map(([r,i])=>[r,ze.string().describe(i)])));return new this(t)}getFormatInstructions(){return`You must format your output as a JSON value that adheres to a given "JSON Schema" instance.

"JSON Schema" is a declarative language that allows you to annotate and validate JSON documents.

For example, the example "JSON Schema" instance {{"properties": {{"foo": {{"description": "a list of test words", "type": "array", "items": {{"type": "string"}}}}}}, "required": ["foo"]}}}}
would match an object with one required property, "foo". The "type" property specifies "foo" must be an "array", and the "description" property semantically describes it as "a list of test words". The items within "foo" must be strings.
Thus, the object {{"foo": ["bar", "baz"]}} is a well-formatted instance of this example "JSON Schema". The object {{"properties": {{"foo": ["bar", "baz"]}}}} is not well-formatted.

Your output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!

Here is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:
\`\`\`json
${JSON.stringify(hr(this.schema))}
\`\`\`
`}async parse(e){try{let t=e.includes("```")?e.trim().split(/```(?:json)?/)[1]:e.trim();return this.schema.parseAsync(JSON.parse(t))}catch(t){throw new ne(`Failed to parse. Text: "${e}". Error: ${t}`,e)}}},Qe=class extends Pt{getFormatInstructions(e){let t=e?.interpolationDepth??1;if(t<1)throw new Error("f string interpolation depth must be at least 1");return`Return a markdown code snippet with a JSON object formatted to look like:
\`\`\`json
${this._schemaToInstruction(hr(this.schema)).replaceAll("{","{".repeat(t)).replaceAll("}","}".repeat(t))}
\`\`\``}_schemaToInstruction(e,t=2){let r=e;if("type"in r){let i=!1,o;if(Array.isArray(r.type)){let u=r.type.findIndex(l=>l==="null");u!==-1&&(i=!0,r.type.splice(u,1)),o=r.type.join(" | ")}else o=r.type;if(r.type==="object"&&r.properties){let u=r.description?` // ${r.description}`:"";return`{
${Object.entries(r.properties).map(([c,d])=>{let f=r.required?.includes(c)?"":" (optional)";return`${" ".repeat(t)}"${c}": ${this._schemaToInstruction(d,t+2)}${f}`}).join(`
`)}
${" ".repeat(t-2)}}${u}`}if(r.type==="array"&&r.items){let u=r.description?` // ${r.description}`:"";return`array[
${" ".repeat(t)}${this._schemaToInstruction(r.items,t+2)}
${" ".repeat(t-2)}] ${u}`}let a=i?" (nullable)":"",s=r.description?` // ${r.description}`:"";return`${o}${s}${a}`}if("anyOf"in r)return r.anyOf.map(i=>this._schemaToInstruction(i,t)).join(`
${" ".repeat(t-2)}`);throw new Error("unsupported schema type")}static fromZodSchema(e){return new this(e)}static fromNamesAndDescriptions(e){let t=ze.object(Object.fromEntries(Object.entries(e).map(([r,i])=>[r,ze.string().describe(i)])));return new this(t)}};var ie=class extends Qe{constructor(e,t){super(e),Object.defineProperty(this,"defaultDestination",{enumerable:!0,configurable:!0,writable:!0,value:"DEFAULT"}),this.defaultDestination=t?.defaultDestination??this.defaultDestination}async parse(e){try{let t=await super.parse(e);return t.destination?.toLowerCase()===this.defaultDestination.toLowerCase()&&(t.destination=null),t}catch(t){throw new ne(`Failed to parse. Text: "${e}". Error: ${t}`,e)}}};var Tt=class n extends F{static fromPrompts(e,t,r,i,o,a){return n.fromLLMAndPrompts(e,{promptNames:t,promptDescriptions:r,promptTemplates:i,defaultChain:o,multiRouteChainOpts:a})}static fromLLMAndPrompts(e,{promptNames:t,promptDescriptions:r,promptTemplates:i,defaultChain:o,llmChainOpts:a,conversationChainOpts:s,multiRouteChainOpts:u}){let l=re(t,r).map(([w,A])=>`${w}: ${A}`),c=Ue.object({destination:Ue.string().optional().describe('name of the question answering system to use or "DEFAULT"'),next_inputs:Ue.object({input:Ue.string().describe("a potentially modified version of the original input")}).describe("input to be fed to the next model")}),d=new ie(c),f=l.join(`
`),v=he(pr(d.getFormatInstructions({interpolationDepth:4})),{destinations:f}),E=new p({template:v,inputVariables:["input"],outputParser:d}),S=H.fromLLM(e,E),L=re(t,i).reduce((w,[A,q])=>{let R;if(typeof q=="object")R=q;else if(typeof q=="string")R=new p({template:q,inputVariables:["input"]});else throw new Error("Invalid prompt template");return w[A]=new h({...a,llm:e,prompt:R}),w},{}),b=new z({...s,llm:e,outputKey:"text"});return new n({...u,routerChain:S,destinationChains:L,defaultChain:o??b})}_chainType(){return"multi_prompt_chain"}};import{z as Fe}from"/v135/zod@3.22.4/denonext/zod.mjs";var mr=n=>`Given a query to a question answering system, select the system best suited for the input. You will be given the names of the available systems and a description of what questions the system is best suited for. You may also revise the original input if you think that revising it will ultimately lead to a better response.

<< FORMATTING >>
${n}

REMEMBER: "destination" MUST be one of the candidate prompt names specified below OR it can be "DEFAULT" if the input is not well suited for any of the candidate prompts.
REMEMBER: "next_inputs.query" can just be the original input if you don't think any modifications are needed.

<< CANDIDATE PROMPTS >>
{destinations}

<< INPUT >>
{{input}}

<< OUTPUT >>
`;var Et=class n extends F{get outputKeys(){return["result"]}static fromRetrievers(e,t,r,i,o,a,s){return n.fromLLMAndRetrievers(e,{retrieverNames:t,retrieverDescriptions:r,retrievers:i,retrieverPrompts:o,defaults:a,multiRetrievalChainOpts:s})}static fromLLMAndRetrievers(e,{retrieverNames:t,retrieverDescriptions:r,retrievers:i,retrieverPrompts:o,defaults:a,multiRetrievalChainOpts:s,retrievalQAChainOpts:u}){let{defaultRetriever:l,defaultPrompt:c,defaultChain:d}=a??{};if(c&&!l)throw new Error("`default_retriever` must be specified if `default_prompt` is \nprovided. Received only `default_prompt`.");let f=re(t,r).map(([B,oe])=>`${B}: ${oe}`),v=Fe.object({destination:Fe.string().optional().describe('name of the question answering system to use or "DEFAULT"'),next_inputs:Fe.object({query:Fe.string().describe("a potentially modified version of the original input")}).describe("input to be fed to the next model")}),E=new ie(v),S=f.join(`
`),L=he(mr(E.getFormatInstructions({interpolationDepth:4})),{destinations:S}),b=new p({template:L,inputVariables:["input"],outputParser:E}),w=H.fromLLM(e,b),A=o??i.map(()=>null),q=re(t,i,A).reduce((B,[oe,dr,Ct])=>{let Ot=u??{};return Ct&&(Ot.prompt=Ct),B[oe]=te.fromLLM(e,dr,Ot),B},{}),R;if(d)R=d;else if(l)R=te.fromLLM(e,l,{...u,prompt:c});else{let B=ot.replace("input","query"),oe=new p({template:B,inputVariables:["history","query"]});R=new z({llm:e,prompt:oe,outputKey:"result"})}return new n({...s,routerChain:w,destinationChains:q,defaultChain:R})}_chainType(){return"multi_retrieval_qa_chain"}};export{it as APIChain,dt as AnalyzeDocumentChain,m as BaseChain,ht as ChatVectorDBQAChain,gt as ConstitutionalChain,wt as ConstitutionalPrinciple,z as ConversationChain,yt as ConversationalRetrievalQAChain,h as LLMChain,H as LLMRouterChain,Q as MapReduceDocumentsChain,Tt as MultiPromptChain,Et as MultiRetrievalQAChain,F as MultiRouteChain,vt as OpenAIModerationChain,Ke as PRINCIPLES,U as RefineDocumentsChain,te as RetrievalQAChain,ge as RouterChain,st as SequentialChain,ut as SimpleSequentialChain,bt as SqlDatabaseChain,I as StuffDocumentsChain,ft as VectorDBQAChain,pt as loadQAChain,Bt as loadQAMapReduceChain,Gt as loadQARefineChain,N as loadQAStuffChain,rn as loadSummarizationChain};
//# sourceMappingURL=chains.js.map