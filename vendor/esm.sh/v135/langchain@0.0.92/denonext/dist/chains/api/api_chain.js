/* esm.sh - esbuild bundle(langchain@0.0.92/dist/chains/api/api_chain) denonext production */
import __Process$ from "node:process";
var U="__run",I=class{constructor(e){Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.text=e}toJSON(){return{type:this._getType(),data:{content:this.text,role:"role"in this?this.role:void 0}}}},L=class extends I{_getType(){return"human"}};var $=class{};import{v4 as x}from"/v135/uuid@9.0.1/denonext/uuid.mjs";import*as W from"/v135/uuid@9.0.1/denonext/uuid.mjs";var k=class{},f=class a extends k{constructor(e){super(),Object.defineProperty(this,"ignoreLLM",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"ignoreChain",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"ignoreAgent",{enumerable:!0,configurable:!0,writable:!0,value:!1}),e&&(this.ignoreLLM=e.ignoreLLM??this.ignoreLLM,this.ignoreChain=e.ignoreChain??this.ignoreChain,this.ignoreAgent=e.ignoreAgent??this.ignoreAgent)}copy(){return new this.constructor(this)}static fromMethods(e){class t extends a{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:W.v4()}),Object.assign(this,e)}}return new t}};import B from"/v135/ansi-styles@5.2.0/denonext/ansi-styles.mjs";var p=class extends f{constructor(){super(),Object.defineProperty(this,"runMap",{enumerable:!0,configurable:!0,writable:!0,value:new Map})}copy(){return this}_addChildRun(e,t){e.child_runs.push(t)}_startTrace(e){if(e.parent_run_id!==void 0){let t=this.runMap.get(e.parent_run_id);t&&this._addChildRun(t,e)}this.runMap.set(e.id,e)}async _endTrace(e){let t=e.parent_run_id!==void 0&&this.runMap.get(e.parent_run_id);t?t.child_execution_order=Math.max(t.child_execution_order,e.child_execution_order):await this.persistRun(e),this.runMap.delete(e.id)}_getExecutionOrder(e){let t=e!==void 0&&this.runMap.get(e);return t?t.child_execution_order+1:1}async handleLLMStart(e,t,r,n,i){let o=this._getExecutionOrder(n),s={id:r,name:e.name,parent_run_id:n,start_time:Date.now(),serialized:e,inputs:{prompts:t},execution_order:o,child_runs:[],child_execution_order:o,run_type:"llm",extra:i};this._startTrace(s),await this.onLLMStart?.(s)}async handleChatModelStart(e,t,r,n,i){let o=this._getExecutionOrder(n),s={id:r,name:e.name,parent_run_id:n,start_time:Date.now(),serialized:e,inputs:{messages:t},execution_order:o,child_runs:[],child_execution_order:o,run_type:"llm",extra:i};this._startTrace(s),await this.onLLMStart?.(s)}async handleLLMEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="llm")throw new Error("No LLM run to end.");r.end_time=Date.now(),r.outputs=e,await this.onLLMEnd?.(r),await this._endTrace(r)}async handleLLMError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="llm")throw new Error("No LLM run to end.");r.end_time=Date.now(),r.error=e.message,await this.onLLMError?.(r),await this._endTrace(r)}async handleChainStart(e,t,r,n){let i=this._getExecutionOrder(n),o={id:r,name:e.name,parent_run_id:n,start_time:Date.now(),serialized:e,inputs:t,execution_order:i,child_execution_order:i,run_type:"chain",child_runs:[]};this._startTrace(o),await this.onChainStart?.(o)}async handleChainEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")throw new Error("No chain run to end.");r.end_time=Date.now(),r.outputs=e,await this.onChainEnd?.(r),await this._endTrace(r)}async handleChainError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")throw new Error("No chain run to end.");r.end_time=Date.now(),r.error=e.message,await this.onChainError?.(r),await this._endTrace(r)}async handleToolStart(e,t,r,n){let i=this._getExecutionOrder(n),o={id:r,name:e.name,parent_run_id:n,start_time:Date.now(),serialized:e,inputs:{input:t},execution_order:i,child_execution_order:i,run_type:"tool",child_runs:[]};this._startTrace(o),await this.onToolStart?.(o)}async handleToolEnd(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="tool")throw new Error("No tool run to end");r.end_time=Date.now(),r.outputs={output:e},await this.onToolEnd?.(r),await this._endTrace(r)}async handleToolError(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="tool")throw new Error("No tool run to end");r.end_time=Date.now(),r.error=e.message,await this.onToolError?.(r),await this._endTrace(r)}async handleAgentAction(e,t){let r=this.runMap.get(t);if(!r||r?.run_type!=="chain")return;let n=r;n.actions=n.actions||[],n.actions.push(e),await this.onAgentAction?.(r)}};function l(a,e){return`${a.open}${e}${a.close}`}function d(a,e){try{return JSON.stringify(a,null,2)}catch{return e}}function _(a){if(!a.end_time)return"";let e=a.end_time-a.start_time;return e<1e3?`${e}ms`:`${(e/1e3).toFixed(2)}s`}var{color:h}=B,g=class extends p{constructor(){super(...arguments),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"console_callback_handler"})}persistRun(e){return Promise.resolve()}getParents(e){let t=[],r=e;for(;r.parent_run_id;){let n=this.runMap.get(r.parent_run_id);if(n)t.push(n),r=n;else break}return t}getBreadcrumbs(e){let r=[...this.getParents(e).reverse(),e].map((n,i,o)=>{let s=`${n.execution_order}:${n.run_type}:${n.name}`;return i===o.length-1?l(B.bold,s):s}).join(" > ");return l(h.grey,r)}onChainStart(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.green,"[chain/start]")} [${t}] Entering Chain run with input: ${d(e.inputs,"[inputs]")}`)}onChainEnd(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.cyan,"[chain/end]")} [${t}] [${_(e)}] Exiting Chain run with output: ${d(e.outputs,"[outputs]")}`)}onChainError(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.red,"[chain/error]")} [${t}] [${_(e)}] Chain run errored with error: ${d(e.error,"[error]")}`)}onLLMStart(e){let t=this.getBreadcrumbs(e),r="prompts"in e.inputs?{prompts:e.inputs.prompts.map(n=>n.trim())}:e.inputs;console.log(`${l(h.green,"[llm/start]")} [${t}] Entering LLM run with input: ${d(r,"[inputs]")}`)}onLLMEnd(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.cyan,"[llm/end]")} [${t}] [${_(e)}] Exiting LLM run with output: ${d(e.outputs,"[response]")}`)}onLLMError(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.red,"[llm/error]")} [${t}] [${_(e)}] LLM run errored with error: ${d(e.error,"[error]")}`)}onToolStart(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.green,"[tool/start]")} [${t}] Entering Tool run with input: "${e.inputs.input?.trim()}"`)}onToolEnd(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.cyan,"[tool/end]")} [${t}] [${_(e)}] Exiting Tool run with output: "${e.outputs?.output?.trim()}"`)}onToolError(e){let t=this.getBreadcrumbs(e);console.log(`${l(h.red,"[tool/error]")} [${t}] [${_(e)}] Tool run errored with error: ${d(e.error,"[error]")}`)}onAgentAction(e){let t=e,r=this.getBreadcrumbs(e);console.log(`${l(h.blue,"[agent/action]")} [${r}] Agent selected action: ${d(t.actions[t.actions.length-1],"[action]")}`)}};import le from"/v135/p-retry@4.6.2/denonext/p-retry.mjs";import N from"/v135/p-queue@6.6.2/denonext/p-queue.mjs";var ce=[400,401,403,404,405,406,407,408,409],m=class{constructor(e){Object.defineProperty(this,"maxConcurrency",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"maxRetries",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"queue",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.maxConcurrency=e.maxConcurrency??1/0,this.maxRetries=e.maxRetries??6;let t="default"in N?N.default:N;this.queue=new t({concurrency:this.maxConcurrency})}call(e,...t){return this.queue.add(()=>le(()=>e(...t).catch(r=>{throw r instanceof Error?r:new Error(r)}),{onFailedAttempt(r){if(r.message.startsWith("Cancel")||r.message.startsWith("TimeoutError")||r.message.startsWith("AbortError")||r?.code==="ECONNABORTED")throw r;let n=r?.response?.status;if(n&&ce.includes(+n))throw r},retries:this.maxRetries,randomize:!0}),{throwOnTimeout:!0})}callWithOptions(e,t,...r){return e.signal?Promise.race([this.call(t,...r),new Promise((n,i)=>{e.signal?.addEventListener("abort",()=>{i(new Error("AbortError"))})})]):this.call(t,...r)}fetch(...e){return this.call(()=>fetch(...e).then(t=>t.ok?t:Promise.reject(t)))}};var he=()=>typeof window<"u"&&typeof window.document<"u",pe=()=>typeof globalThis=="object"&&globalThis.constructor&&globalThis.constructor.name==="DedicatedWorkerGlobalScope",de=()=>typeof window<"u"&&window.name==="nodejs"||typeof navigator<"u"&&(navigator.userAgent.includes("Node.js")||navigator.userAgent.includes("jsdom")),J=()=>typeof Deno<"u",me=()=>typeof __Process$<"u"&&typeof __Process$.versions<"u"&&typeof __Process$.versions.node<"u"&&!J(),fe=()=>{let a;return he()?a="browser":me()?a="node":pe()?a="webworker":de()?a="jsdom":J()?a="deno":a="other",a},V;async function Y(){return V===void 0&&(V={library:"langchain-js",runtime:fe()}),V}function c(a){try{return typeof __Process$<"u"?__Process$.env?.[a]:void 0}catch{return}}var O=class extends p{constructor({exampleId:e,sessionName:t,callerParams:r,timeout:n}={}){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"langchain_tracer"}),Object.defineProperty(this,"endpoint",{enumerable:!0,configurable:!0,writable:!0,value:c("LANGCHAIN_ENDPOINT")||"http://localhost:1984"}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{"Content-Type":"application/json"}}),Object.defineProperty(this,"sessionName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exampleId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"caller",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:5e3});let i=c("LANGCHAIN_API_KEY");i&&(this.headers["x-api-key"]=i),this.sessionName=t??c("LANGCHAIN_SESSION"),this.exampleId=e,this.timeout=n??this.timeout,this.caller=new m(r??{maxRetries:2})}async _convertToCreate(e,t=void 0){let r=e.extra??{};return r.runtime=await Y(),{id:e.id,name:e.name,start_time:e.start_time,end_time:e.end_time,run_type:e.run_type,reference_example_id:e.parent_run_id?void 0:t,extra:r,parent_run_id:e.parent_run_id,execution_order:e.execution_order,serialized:e.serialized,error:e.error,inputs:e.inputs,outputs:e.outputs??{},session_name:this.sessionName,child_runs:[]}}async persistRun(e){}async _persistRunSingle(e){let t=await this._convertToCreate(e,this.exampleId),r=`${this.endpoint}/runs`,n=await this.caller.call(fetch,r,{method:"POST",headers:this.headers,body:JSON.stringify(t),signal:AbortSignal.timeout(this.timeout)}),i=await n.text();if(!n.ok)throw new Error(`Failed to persist run: ${n.status} ${n.statusText} ${i}`)}async _updateRunSingle(e){let t={end_time:e.end_time,error:e.error,outputs:e.outputs,parent_run_id:e.parent_run_id,reference_example_id:e.reference_example_id},r=`${this.endpoint}/runs/${e.id}`,n=await this.caller.call(fetch,r,{method:"PATCH",headers:this.headers,body:JSON.stringify(t),signal:AbortSignal.timeout(this.timeout)}),i=await n.text();if(!n.ok)throw new Error(`Failed to update run: ${n.status} ${n.statusText} ${i}`)}async onLLMStart(e){await this._persistRunSingle(e)}async onLLMEnd(e){await this._updateRunSingle(e)}async onLLMError(e){await this._updateRunSingle(e)}async onChainStart(e){await this._persistRunSingle(e)}async onChainEnd(e){await this._updateRunSingle(e)}async onChainError(e){await this._updateRunSingle(e)}async onToolStart(e){await this._persistRunSingle(e)}async onToolEnd(e){await this._updateRunSingle(e)}async onToolError(e){await this._updateRunSingle(e)}};function R(a,e="Human",t="AI"){let r=[];for(let n of a){let i;if(n._getType()==="human")i=e;else if(n._getType()==="ai")i=t;else if(n._getType()==="system")i="System";else if(n._getType()==="generic")i=n.role;else throw new Error(`Got unsupported message type: ${n}`);r.push(`${i}: ${n.text}`)}return r.join(`
`)}var A=class extends p{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"langchain_tracer"}),Object.defineProperty(this,"endpoint",{enumerable:!0,configurable:!0,writable:!0,value:c("LANGCHAIN_ENDPOINT")||"http://localhost:1984"}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{"Content-Type":"application/json"}}),Object.defineProperty(this,"session",{enumerable:!0,configurable:!0,writable:!0,value:void 0});let e=c("LANGCHAIN_API_KEY");e&&(this.headers["x-api-key"]=e)}async newSession(e){let t={start_time:Date.now(),name:e},r=await this.persistSession(t);return this.session=r,r}async loadSession(e){let t=`${this.endpoint}/sessions?name=${e}`;return this._handleSessionResponse(t)}async loadDefaultSession(){let e=`${this.endpoint}/sessions?name=default`;return this._handleSessionResponse(e)}async convertV2RunToRun(e){let t=this.session??await this.loadDefaultSession(),r=e.serialized,n;if(e.run_type==="llm"){let i=e.inputs.prompts?e.inputs.prompts:e.inputs.messages.map(s=>R(s));n={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,prompts:i,response:e.outputs}}else if(e.run_type==="chain"){let i=await Promise.all(e.child_runs.map(s=>this.convertV2RunToRun(s)));n={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,inputs:e.inputs,outputs:e.outputs,child_llm_runs:i.filter(s=>s.type==="llm"),child_chain_runs:i.filter(s=>s.type==="chain"),child_tool_runs:i.filter(s=>s.type==="tool")}}else if(e.run_type==="tool"){let i=await Promise.all(e.child_runs.map(s=>this.convertV2RunToRun(s)));n={uuid:e.id,start_time:e.start_time,end_time:e.end_time,execution_order:e.execution_order,child_execution_order:e.child_execution_order,serialized:r,type:e.run_type,session_id:t.id,tool_input:e.inputs.input,output:e.outputs?.output,action:JSON.stringify(r),child_llm_runs:i.filter(s=>s.type==="llm"),child_chain_runs:i.filter(s=>s.type==="chain"),child_tool_runs:i.filter(s=>s.type==="tool")}}else throw new Error(`Unknown run type: ${e.run_type}`);return n}async persistRun(e){let t,r;e.run_type!==void 0?r=await this.convertV2RunToRun(e):r=e,r.type==="llm"?t=`${this.endpoint}/llm-runs`:r.type==="chain"?t=`${this.endpoint}/chain-runs`:t=`${this.endpoint}/tool-runs`;let n=await fetch(t,{method:"POST",headers:this.headers,body:JSON.stringify(r)});n.ok||console.error(`Failed to persist run: ${n.status} ${n.statusText}`)}async persistSession(e){let t=`${this.endpoint}/sessions`,r=await fetch(t,{method:"POST",headers:this.headers,body:JSON.stringify(e)});return r.ok?{id:(await r.json()).id,...e}:(console.error(`Failed to persist session: ${r.status} ${r.statusText}, using default session.`),{id:1,...e})}async _handleSessionResponse(e){let t=await fetch(e,{method:"GET",headers:this.headers}),r;if(!t.ok)return console.error(`Failed to load session: ${t.status} ${t.statusText}`),r={id:1,start_time:Date.now()},this.session=r,r;let n=await t.json();return n.length===0?(r={id:1,start_time:Date.now()},this.session=r,r):([r]=n,this.session=r,r)}};async function Q(a){let e=new A;return a?await e.loadSession(a):await e.loadDefaultSession(),e}async function X(){return new O}var z=class{setHandler(e){return this.setHandlers([e])}},E=class{constructor(e,t,r,n){Object.defineProperty(this,"runId",{enumerable:!0,configurable:!0,writable:!0,value:e}),Object.defineProperty(this,"handlers",{enumerable:!0,configurable:!0,writable:!0,value:t}),Object.defineProperty(this,"inheritableHandlers",{enumerable:!0,configurable:!0,writable:!0,value:r}),Object.defineProperty(this,"_parentRunId",{enumerable:!0,configurable:!0,writable:!0,value:n})}async handleText(e){await Promise.all(this.handlers.map(async t=>{try{await t.handleText?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleText: ${r}`)}}))}},C=class extends E{async handleLLMNewToken(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMNewToken?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMNewToken: ${r}`)}}))}async handleLLMError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMError: ${r}`)}}))}async handleLLMEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreLLM)try{await t.handleLLMEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleLLMEnd: ${r}`)}}))}},H=class extends E{getChild(){let e=new y(this.runId);return e.setHandlers(this.inheritableHandlers),e}async handleChainError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreChain)try{await t.handleChainError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleChainError: ${r}`)}}))}async handleChainEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreChain)try{await t.handleChainEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleChainEnd: ${r}`)}}))}async handleAgentAction(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleAgentAction?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleAgentAction: ${r}`)}}))}async handleAgentEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleAgentEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleAgentEnd: ${r}`)}}))}},D=class extends E{getChild(){let e=new y(this.runId);return e.setHandlers(this.inheritableHandlers),e}async handleToolError(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleToolError?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleToolError: ${r}`)}}))}async handleToolEnd(e){await Promise.all(this.handlers.map(async t=>{if(!t.ignoreAgent)try{await t.handleToolEnd?.(e,this.runId,this._parentRunId)}catch(r){console.error(`Error in handler ${t.constructor.name}, handleToolEnd: ${r}`)}}))}},y=class a extends z{constructor(e){super(),Object.defineProperty(this,"handlers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inheritableHandlers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"callback_manager"}),Object.defineProperty(this,"_parentRunId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.handlers=[],this.inheritableHandlers=[],this._parentRunId=e}async handleLLMStart(e,t,r=x(),n=void 0,i=void 0){return await Promise.all(this.handlers.map(async o=>{if(!o.ignoreLLM)try{await o.handleLLMStart?.(e,t,r,this._parentRunId,i)}catch(s){console.error(`Error in handler ${o.constructor.name}, handleLLMStart: ${s}`)}})),new C(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleChatModelStart(e,t,r=x(),n=void 0,i=void 0){let o;return await Promise.all(this.handlers.map(async s=>{if(!s.ignoreLLM)try{s.handleChatModelStart?await s.handleChatModelStart?.(e,t,r,this._parentRunId,i):s.handleLLMStart&&(o=t.map(u=>R(u)),await s.handleLLMStart?.(e,o,r,this._parentRunId,i))}catch(u){console.error(`Error in handler ${s.constructor.name}, handleLLMStart: ${u}`)}})),new C(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleChainStart(e,t,r=x()){return await Promise.all(this.handlers.map(async n=>{if(!n.ignoreChain)try{await n.handleChainStart?.(e,t,r,this._parentRunId)}catch(i){console.error(`Error in handler ${n.constructor.name}, handleChainStart: ${i}`)}})),new H(r,this.handlers,this.inheritableHandlers,this._parentRunId)}async handleToolStart(e,t,r=x()){return await Promise.all(this.handlers.map(async n=>{if(!n.ignoreAgent)try{await n.handleToolStart?.(e,t,r,this._parentRunId)}catch(i){console.error(`Error in handler ${n.constructor.name}, handleToolStart: ${i}`)}})),new D(r,this.handlers,this.inheritableHandlers,this._parentRunId)}addHandler(e,t=!0){this.handlers.push(e),t&&this.inheritableHandlers.push(e)}removeHandler(e){this.handlers=this.handlers.filter(t=>t!==e),this.inheritableHandlers=this.inheritableHandlers.filter(t=>t!==e)}setHandlers(e,t=!0){this.handlers=[],this.inheritableHandlers=[];for(let r of e)this.addHandler(r,t)}copy(e=[],t=!0){let r=new a(this._parentRunId);for(let n of this.handlers){let i=this.inheritableHandlers.includes(n);r.addHandler(n,i)}for(let n of e)r.handlers.filter(i=>i.name==="console_callback_handler").some(i=>i.name===n.name)||r.addHandler(n,t);return r}static fromHandlers(e){class t extends f{constructor(){super(),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:x()}),Object.assign(this,e)}}let r=new this;return r.addHandler(new t),r}static async configure(e,t,r){let n;(e||t)&&(Array.isArray(e)||!e?(n=new a,n.setHandlers(e?.map(Z)??[],!0)):n=e,n=n.copy(Array.isArray(t)?t.map(Z):t?.handlers,!1));let i=c("LANGCHAIN_VERBOSE")||r?.verbose,o=c("LANGCHAIN_TRACING_V2")??!1,s=o||(c("LANGCHAIN_TRACING")??!1);if(i||s){if(n||(n=new a),i&&!n.handlers.some(u=>u.name===g.prototype.name)){let u=new g;n.addHandler(u,!0)}if(s&&!n.handlers.some(u=>u.name==="langchain_tracer"))if(o)n.addHandler(await X(),!0);else{let u=c("LANGCHAIN_SESSION");n.addHandler(await Q(u),!0)}}return n}};function Z(a){return"name"in a?a:f.fromMethods(a)}import{Tiktoken as be,getEncodingNameForModel as _e}from"/v135/js-tiktoken@1.0.8/denonext/lite.js";var M={},ye=new m({});async function we(a,e){return a in M||(M[a]=ye.fetch(`https://tiktoken.pages.dev/js/${a}.json`,{signal:e?.signal}).then(t=>t.json()).catch(t=>{throw delete M[a],t})),new be(await M[a],e?.extendedSpecialTokens)}async function K(a,e){return we(_e(a),e)}var ee=a=>a.startsWith("gpt-3.5-turbo-")?"gpt-3.5-turbo":a.startsWith("gpt-4-32k-")?"gpt-4-32k":a.startsWith("gpt-4-")?"gpt-4":a;var ge=()=>!1,P=class{constructor(e){Object.defineProperty(this,"verbose",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"callbacks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.verbose=e.verbose??ge(),this.callbacks=e.callbacks}},S=class extends P{get callKeys(){return["stop","timeout","signal"]}constructor(e){super({verbose:e.verbose,callbacks:e.callbacks??e.callbackManager}),Object.defineProperty(this,"caller",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_encoding",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.caller=new m(e??{})}async getNumTokens(e){let t=Math.ceil(e.length/4);if(!this._encoding)try{this._encoding=await K("modelName"in this?ee(this.modelName):"gpt2")}catch(r){console.warn("Failed to calculate number of tokens, falling back to approximate count",r)}return this._encoding&&(t=this._encoding.encode(e).length),t}_identifyingParams(){return{}}serialize(){return{...this._identifyingParams(),_type:this._llmType(),_model:this._modelType()}}static async deserialize(e){let{_type:t,_model:r,...n}=e;if(r&&r!=="base_chat_model")throw new Error(`Cannot load LLM with model ${r}`);let i={openai:(await import("/v135/langchain@0.0.92/denonext/dist/chat_models/openai.js")).ChatOpenAI}[t];if(i===void 0)throw new Error(`Cannot load  LLM with type ${t}`);return new i(n)}};var w=class extends P{constructor(e,t,r){if(arguments.length===1&&typeof e=="object"&&!("saveContext"in e)){let{memory:n,callbackManager:i,...o}=e;super({...o,callbacks:i??o.callbacks}),this.memory=n}else super({verbose:t,callbacks:r}),this.memory=e}serialize(){throw new Error("Method not implemented.")}async run(e,t){if(!(this.inputKeys.length<=1))throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);let n=this.inputKeys.length?{[this.inputKeys[0]]:e}:{},i=await this.call(n,t),o=Object.keys(i);if(o.length===1)return i[o[0]];throw new Error("return values have multiple keys, `run` only supported when one key currently")}async call(e,t){let r={...e};if(this.memory!=null){let s=await this.memory.loadMemoryVariables(e);for(let[u,ue]of Object.entries(s))r[u]=ue}let i=await(await y.configure(t,this.callbacks,{verbose:this.verbose}))?.handleChainStart({name:this._chainType()},r),o;try{o=await this._call(r,i)}catch(s){throw await i?.handleChainError(s),s}return this.memory!=null&&await this.memory.saveContext(e,o),await i?.handleChainEnd(o),Object.defineProperty(o,U,{value:i?{runId:i?.runId}:void 0,configurable:!0}),o}async apply(e,t){return Promise.all(e.map(async(r,n)=>this.call(r,t?.[n])))}static async deserialize(e,t={}){switch(e._type){case"llm_chain":{let{LLMChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/llm_chain.js");return r.deserialize(e)}case"sequential_chain":{let{SequentialChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/sequential_chain.js");return r.deserialize(e)}case"simple_sequential_chain":{let{SimpleSequentialChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/sequential_chain.js");return r.deserialize(e)}case"stuff_documents_chain":{let{StuffDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"map_reduce_documents_chain":{let{MapReduceDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"refine_documents_chain":{let{RefineDocumentsChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/combine_docs_chain.js");return r.deserialize(e)}case"vector_db_qa":{let{VectorDBQAChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/vector_db_qa.js");return r.deserialize(e,t)}case"api_chain":{let{APIChain:r}=await import("/v135/langchain@0.0.92/denonext/dist/chains/api/api_chain.js");return r.deserialize(e)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}};var q=class extends ${constructor(e){super(),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.value=e}toString(){return this.value}toChatMessages(){return[new L(this.value)]}},v=class{constructor(e){Object.defineProperty(this,"inputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"partialVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0});let{inputVariables:t}=e;if(t.includes("stop"))throw new Error("Cannot have an input variable named 'stop', as it is used internally, please rename.");Object.assign(this,e)}async mergePartialAndUserVariables(e){let t=this.partialVariables??{},r={};for(let[i,o]of Object.entries(t))typeof o=="string"?r[i]=o:r[i]=await o();return{...r,...e}}static async deserialize(e){switch(e._type){case"prompt":{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize(e)}case void 0:{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize({...e,_type:"prompt"})}case"few_shot":{let{FewShotPromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/few_shot.js");return t.deserialize(e)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}},j=class extends v{async formatPromptValue(e){let t=await this.format(e);return new q(t)}};var b=class a extends w{get inputKeys(){return this.prompt.inputVariables}get outputKeys(){return[this.outputKey]}constructor(e){if(super(e),Object.defineProperty(this,"prompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"llm",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"text"}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.prompt=e.prompt,this.llm=e.llm,this.outputKey=e.outputKey??this.outputKey,this.outputParser=e.outputParser??this.outputParser,this.prompt.outputParser){if(this.outputParser)throw new Error("Cannot set both outputParser and prompt.outputParser");this.outputParser=this.prompt.outputParser}}async _getFinalOutput(e,t,r){let n=e[0].text,i;return this.outputParser?i=await this.outputParser.parseWithPrompt(n,t,r?.getChild()):i=n,i}call(e,t){return super.call(e,t)}async _call(e,t){let r={...e},n={};for(let s of this.llm.callKeys)s in e&&(n[s]=e[s],delete r[s]);let i=await this.prompt.formatPromptValue(r),{generations:o}=await this.llm.generatePrompt([i],n,t?.getChild());return{[this.outputKey]:await this._getFinalOutput(o[0],i,t)}}async predict(e,t){return(await this.call(e,t))[this.outputKey]}_chainType(){return"llm_chain"}static async deserialize(e){let{llm:t,prompt:r}=e;if(!t)throw new Error("LLMChain must have llm");if(!r)throw new Error("LLMChain must have prompt");return new a({llm:await S.deserialize(t),prompt:await v.deserialize(r)})}serialize(){return{_type:this._chainType(),llm:this.llm.serialize(),prompt:this.prompt.serialize()}}};var te=a=>{let e=a.split(""),t=[],r=(i,o)=>{for(let s=o;s<e.length;s+=1)if(i.includes(e[s]))return s;return-1},n=0;for(;n<e.length;)if(e[n]==="{"&&n+1<e.length&&e[n+1]==="{")t.push({type:"literal",text:"{"}),n+=2;else if(e[n]==="}"&&n+1<e.length&&e[n+1]==="}")t.push({type:"literal",text:"}"}),n+=2;else if(e[n]==="{"){let i=r("}",n);if(i<0)throw new Error("Unclosed '{' in template.");t.push({type:"variable",name:e.slice(n+1,i).join("")}),n=i+1}else{if(e[n]==="}")throw new Error("Single '}' in template.");{let i=r("{}",n),o=(i<0?e.slice(n):e.slice(n,i)).join("");t.push({type:"literal",text:o}),n=i<0?e.length:i}}return t},xe=(a,e)=>te(a).reduce((t,r)=>{if(r.type==="variable"){if(r.name in e)return t+e[r.name];throw new Error(`Missing value for input ${r.name}`)}return t+r.text},""),F={"f-string":xe,jinja2:(a,e)=>""},Ee={"f-string":te,jinja2:a=>[]},G=(a,e,t)=>F[e](a,t),re=(a,e)=>Ee[e](a),ne=(a,e,t)=>{if(!(e in F)){let r=Object.keys(F);throw new Error(`Invalid template format. Got \`${e}\`;
                         should be one of ${r}`)}try{let r=t.reduce((n,i)=>(n[i]="foo",n),{});G(a,e,r)}catch{throw new Error("Invalid prompt schema.")}};var T=class a extends j{constructor(e){if(super(e),Object.defineProperty(this,"template",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.validateTemplate){let t=this.inputVariables;this.partialVariables&&(t=t.concat(Object.keys(this.partialVariables))),ne(this.template,this.templateFormat,t)}}_getPromptType(){return"prompt"}async format(e){let t=await this.mergePartialAndUserVariables(e);return G(this.template,this.templateFormat,t)}static fromExamples(e,t,r,n=`

`,i=""){let o=[i,...e,t].join(n);return new a({inputVariables:r,template:o})}static fromTemplate(e,{templateFormat:t="f-string",...r}={}){let n=new Set;return re(e,t).forEach(i=>{i.type==="variable"&&n.add(i.name)}),new a({inputVariables:[...n],templateFormat:t,template:e,...r})}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(r=>!(r in e)),t.partialVariables={...this.partialVariables??{},...e},new a(t)}serialize(){if(this.outputParser!==void 0)throw new Error("Cannot serialize a prompt template with an output parser");return{_type:this._getPromptType(),input_variables:this.inputVariables,template:this.template,template_format:this.templateFormat}}static async deserialize(e){if(!e.template)throw new Error("Prompt template must have a template");return new a({inputVariables:e.input_variables,template:e.template,templateFormat:e.template_format})}};var ie=`You are given the below API Documentation:
{api_docs}
Using this documentation, generate the full API url to call for answering the user question.
You should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.

Question:{question}
API url:`,ae=new T({inputVariables:["api_docs","question"],template:ie}),Pe=`${ie} {api_url}

Here is the response from the API:

{api_response}

Summarize this response to answer the original question.

Summary:`,se=new T({inputVariables:["api_docs","question","api_url","api_response"],template:Pe});var oe=class a extends w{get inputKeys(){return[this.inputKey]}get outputKeys(){return[this.outputKey]}constructor(e){super(e),Object.defineProperty(this,"apiAnswerChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiRequestChain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiDocs",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"headers",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"inputKey",{enumerable:!0,configurable:!0,writable:!0,value:"question"}),Object.defineProperty(this,"outputKey",{enumerable:!0,configurable:!0,writable:!0,value:"output"}),this.apiRequestChain=e.apiRequestChain,this.apiAnswerChain=e.apiAnswerChain,this.apiDocs=e.apiDocs,this.inputKey=e.inputKey??this.inputKey,this.outputKey=e.outputKey??this.outputKey,this.headers=e.headers??this.headers}async _call(e,t){let r=e[this.inputKey],n=await this.apiRequestChain.predict({question:r,api_docs:this.apiDocs},t?.getChild()),o=await(await fetch(n,{headers:this.headers})).text(),s=await this.apiAnswerChain.predict({question:r,api_docs:this.apiDocs,api_url:n,api_response:o},t?.getChild());return{[this.outputKey]:s}}_chainType(){return"api_chain"}static async deserialize(e){let{api_request_chain:t,api_answer_chain:r,api_docs:n}=e;if(!t)throw new Error("LLMChain must have api_request_chain");if(!r)throw new Error("LLMChain must have api_answer_chain");if(!n)throw new Error("LLMChain must have api_docs");return new a({apiAnswerChain:await b.deserialize(r),apiRequestChain:await b.deserialize(t),apiDocs:n})}serialize(){return{_type:this._chainType(),api_answer_chain:this.apiAnswerChain.serialize(),api_request_chain:this.apiRequestChain.serialize(),api_docs:this.apiDocs}}static fromLLMAndAPIDocs(e,t,r={}){let{apiUrlPrompt:n=ae,apiResponsePrompt:i=se}=r,o=new b({prompt:n,llm:e}),s=new b({prompt:i,llm:e});return new this({apiAnswerChain:s,apiRequestChain:o,apiDocs:t,...r})}};export{oe as APIChain};
//# sourceMappingURL=api_chain.js.map