/* esm.sh - esbuild bundle(langchain@0.0.92/dist/prompts/few_shot) denonext production */
var h=class{constructor(e){Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.text=e}toJSON(){return{type:this._getType(),data:{content:this.text,role:"role"in this?this.role:void 0}}}},u=class extends h{_getType(){return"human"}};var m=class{};var b=class extends m{constructor(e){super(),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.value=e}toString(){return this.value}toChatMessages(){return[new u(this.value)]}},d=class{constructor(e){Object.defineProperty(this,"inputVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"outputParser",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"partialVariables",{enumerable:!0,configurable:!0,writable:!0,value:void 0});let{inputVariables:t}=e;if(t.includes("stop"))throw new Error("Cannot have an input variable named 'stop', as it is used internally, please rename.");Object.assign(this,e)}async mergePartialAndUserVariables(e){let t=this.partialVariables??{},a={};for(let[s,l]of Object.entries(t))typeof l=="string"?a[s]=l:a[s]=await l();return{...a,...e}}static async deserialize(e){switch(e._type){case"prompt":{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize(e)}case void 0:{let{PromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/prompt.js");return t.deserialize({...e,_type:"prompt"})}case"few_shot":{let{FewShotPromptTemplate:t}=await import("/v135/langchain@0.0.92/denonext/dist/prompts/few_shot.js");return t.deserialize(e)}default:throw new Error(`Invalid prompt type in config: ${e._type}`)}}},n=class extends d{async formatPromptValue(e){let t=await this.format(e);return new b(t)}};var w=i=>{let e=i.split(""),t=[],a=(s,l)=>{for(let p=l;p<e.length;p+=1)if(s.includes(e[p]))return p;return-1},r=0;for(;r<e.length;)if(e[r]==="{"&&r+1<e.length&&e[r+1]==="{")t.push({type:"literal",text:"{"}),r+=2;else if(e[r]==="}"&&r+1<e.length&&e[r+1]==="}")t.push({type:"literal",text:"}"}),r+=2;else if(e[r]==="{"){let s=a("}",r);if(s<0)throw new Error("Unclosed '{' in template.");t.push({type:"variable",name:e.slice(r+1,s).join("")}),r=s+1}else{if(e[r]==="}")throw new Error("Single '}' in template.");{let s=a("{}",r),l=(s<0?e.slice(r):e.slice(r,s)).join("");t.push({type:"literal",text:l}),r=s<0?e.length:s}}return t},v=(i,e)=>w(i).reduce((t,a)=>{if(a.type==="variable"){if(a.name in e)return t+e[a.name];throw new Error(`Missing value for input ${a.name}`)}return t+a.text},""),x={"f-string":v,jinja2:(i,e)=>""},P={"f-string":w,jinja2:i=>[]},o=(i,e,t)=>x[e](i,t),y=(i,e)=>P[e](i),c=(i,e,t)=>{if(!(e in x)){let a=Object.keys(x);throw new Error(`Invalid template format. Got \`${e}\`;
                         should be one of ${a}`)}try{let a=t.reduce((r,s)=>(r[s]="foo",r),{});o(i,e,a)}catch{throw new Error("Invalid prompt schema.")}};var f=class i extends n{constructor(e){if(super(e),Object.defineProperty(this,"template",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.validateTemplate){let t=this.inputVariables;this.partialVariables&&(t=t.concat(Object.keys(this.partialVariables))),c(this.template,this.templateFormat,t)}}_getPromptType(){return"prompt"}async format(e){let t=await this.mergePartialAndUserVariables(e);return o(this.template,this.templateFormat,t)}static fromExamples(e,t,a,r=`

`,s=""){let l=[s,...e,t].join(r);return new i({inputVariables:a,template:l})}static fromTemplate(e,{templateFormat:t="f-string",...a}={}){let r=new Set;return y(e,t).forEach(s=>{s.type==="variable"&&r.add(s.name)}),new i({inputVariables:[...r],templateFormat:t,template:e,...a})}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(a=>!(a in e)),t.partialVariables={...this.partialVariables??{},...e},new i(t)}serialize(){if(this.outputParser!==void 0)throw new Error("Cannot serialize a prompt template with an output parser");return{_type:this._getPromptType(),input_variables:this.inputVariables,template:this.template,template_format:this.templateFormat}}static async deserialize(e){if(!e.template)throw new Error("Prompt template must have a template");return new i({inputVariables:e.input_variables,template:e.template,templateFormat:e.template_format})}};var g=class i extends n{constructor(e){if(super(e),Object.defineProperty(this,"examples",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exampleSelector",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"examplePrompt",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"suffix",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"exampleSeparator",{enumerable:!0,configurable:!0,writable:!0,value:`

`}),Object.defineProperty(this,"prefix",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"templateFormat",{enumerable:!0,configurable:!0,writable:!0,value:"f-string"}),Object.defineProperty(this,"validateTemplate",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.assign(this,e),this.examples!==void 0&&this.exampleSelector!==void 0)throw new Error("Only one of 'examples' and 'example_selector' should be provided");if(this.examples===void 0&&this.exampleSelector===void 0)throw new Error("One of 'examples' and 'example_selector' should be provided");if(this.validateTemplate){let t=this.inputVariables;this.partialVariables&&(t=t.concat(Object.keys(this.partialVariables))),c(this.prefix+this.suffix,this.templateFormat,t)}}_getPromptType(){return"few_shot"}async getExamples(e){if(this.examples!==void 0)return this.examples;if(this.exampleSelector!==void 0)return this.exampleSelector.selectExamples(e);throw new Error("One of 'examples' and 'example_selector' should be provided")}async partial(e){let t={...this};return t.inputVariables=this.inputVariables.filter(a=>!(a in e)),t.partialVariables={...this.partialVariables??{},...e},new i(t)}async format(e){let t=await this.mergePartialAndUserVariables(e),a=await this.getExamples(t),r=await Promise.all(a.map(l=>this.examplePrompt.format(l))),s=[this.prefix,...r,this.suffix].join(this.exampleSeparator);return o(s,this.templateFormat,t)}serialize(){if(this.exampleSelector||!this.examples)throw new Error("Serializing an example selector is not currently supported");if(this.outputParser!==void 0)throw new Error("Serializing an output parser is not currently supported");return{_type:this._getPromptType(),input_variables:this.inputVariables,example_prompt:this.examplePrompt.serialize(),example_separator:this.exampleSeparator,suffix:this.suffix,prefix:this.prefix,template_format:this.templateFormat,examples:this.examples}}static async deserialize(e){let{example_prompt:t}=e;if(!t)throw new Error("Missing example prompt");let a=await f.deserialize(t),r;if(Array.isArray(e.examples))r=e.examples;else throw new Error("Invalid examples format. Only list or string are supported.");return new i({inputVariables:e.input_variables,examplePrompt:a,examples:r,exampleSeparator:e.example_separator,prefix:e.prefix,suffix:e.suffix,templateFormat:e.template_format})}};export{g as FewShotPromptTemplate};
//# sourceMappingURL=few_shot.js.map