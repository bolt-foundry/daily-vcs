/* esm.sh - esbuild bundle(vfile@6.0.1/do-not-use-conditional-minurl) denonext production */
function r(o){return!!(o!==null&&typeof o=="object"&&"href"in o&&o.href&&"protocol"in o&&o.protocol&&o.auth===void 0)}function d(o){if(typeof o=="string")o=new URL(o);else if(!r(o)){let e=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+o+"`");throw e.code="ERR_INVALID_ARG_TYPE",e}if(o.protocol!=="file:"){let e=new TypeError("The URL must be of scheme file");throw e.code="ERR_INVALID_URL_SCHEME",e}return i(o)}function i(o){if(o.hostname!==""){let n=new TypeError('File URL host must be "localhost" or empty on darwin');throw n.code="ERR_INVALID_FILE_URL_HOST",n}let e=o.pathname,t=-1;for(;++t<e.length;)if(e.codePointAt(t)===37&&e.codePointAt(t+1)===50){let n=e.codePointAt(t+2);if(n===70||n===102){let c=new TypeError("File URL path must not include encoded / characters");throw c.code="ERR_INVALID_FILE_URL_PATH",c}}return decodeURIComponent(e)}export{r as isUrl,d as urlToPath};
//# sourceMappingURL=do-not-use-conditional-minurl.js.map