/* esm.sh - esbuild bundle(buffer-equal-constant-time@1.0.1) denonext production */
import * as __0$ from "node:buffer";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"buffer":return e(__0$);default:throw new Error("module \""+n+"\" not found");}};
var _=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var c=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var w=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),E=(e,r)=>{for(var t in r)s(e,t,{get:r[t],enumerable:!0})},p=(e,r,t,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of h(r))!x.call(e,l)&&l!==t&&s(e,l,{get:()=>r[l],enumerable:!(u=g(r,l))||u.enumerable});return e},f=(e,r,t)=>(p(e,r,"default"),t&&p(t,r,"default")),B=(e,r,t)=>(t=e!=null?_(m(e)):{},p(r||!e||!e.__esModule?s(t,"default",{value:e,enumerable:!0}):t,e));var q=w((F,d)=>{"use strict";var n=c("buffer").Buffer,i=c("buffer").SlowBuffer;d.exports=a;function a(e,r){if(!n.isBuffer(e)||!n.isBuffer(r)||e.length!==r.length)return!1;for(var t=0,u=0;u<e.length;u++)t|=e[u]^r[u];return t===0}a.install=function(){n.prototype.equal=i.prototype.equal=function(r){return a(this,r)}};var S=n.prototype.equal,j=i.prototype.equal;a.restore=function(){n.prototype.equal=S,i.prototype.equal=j}});var o={};E(o,{default:()=>C,install:()=>k,restore:()=>z});var y=B(q());f(o,B(q()));var{install:k,restore:z}=y,{default:v,...A}=y,C=v!==void 0?v:A;export{C as default,k as install,z as restore};
//# sourceMappingURL=buffer-equal-constant-time.mjs.map