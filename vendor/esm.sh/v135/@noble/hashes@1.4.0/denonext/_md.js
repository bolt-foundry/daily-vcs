/* esm.sh - esbuild bundle(@noble/hashes@1.4.0/_md) denonext production */
import{exists as g,output as b}from"/v135/@noble/hashes@1.4.0/denonext/_assert.js";import{Hash as a,createView as p,toBytes as w}from"/v135/@noble/hashes@1.4.0/denonext/utils.js";function m(o,t,s,i){if(typeof o.setBigUint64=="function")return o.setBigUint64(t,s,i);let n=BigInt(32),h=BigInt(4294967295),e=Number(s>>n&h),r=Number(s&h),c=i?4:0,u=i?0:4;o.setUint32(t+c,e,i),o.setUint32(t+u,r,i)}var B=(o,t,s)=>o&t^~o&s,L=(o,t,s)=>o&t^o&s^t&s,d=class extends a{constructor(t,s,i,n){super(),this.blockLen=t,this.outputLen=s,this.padOffset=i,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=p(this.buffer)}update(t){g(this);let{view:s,buffer:i,blockLen:n}=this;t=w(t);let h=t.length;for(let e=0;e<h;){let r=Math.min(n-this.pos,h-e);if(r===n){let c=p(t);for(;n<=h-e;e+=n)this.process(c,e);continue}i.set(t.subarray(e,e+r),this.pos),this.pos+=r,e+=r,this.pos===n&&(this.process(s,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){g(this),b(t,this),this.finished=!0;let{buffer:s,view:i,blockLen:n,isLE:h}=this,{pos:e}=this;s[e++]=128,this.buffer.subarray(e).fill(0),this.padOffset>n-e&&(this.process(i,0),e=0);for(let f=e;f<n;f++)s[f]=0;m(i,n-8,BigInt(this.length*8),h),this.process(i,0);let r=p(t),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let u=c/4,l=this.get();if(u>l.length)throw new Error("_sha2: outputLen bigger than state");for(let f=0;f<u;f++)r.setUint32(4*f,l[f],h)}digest(){let{buffer:t,outputLen:s}=this;this.digestInto(t);let i=t.slice(0,s);return this.destroy(),i}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:s,buffer:i,length:n,finished:h,destroyed:e,pos:r}=this;return t.length=n,t.pos=r,t.finished=h,t.destroyed=e,n%s&&t.buffer.set(i),t}};export{B as Chi,d as HashMD,L as Maj};
//# sourceMappingURL=_md.js.map