/* esm.sh - esbuild bundle(@tensorflow/tfjs-backend-webgl@4.15.0/dist/webgl_util) denonext production */
import{env as c,util as a}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/tfjs-core.mjs";import{getWebGLContext as R}from"/v135/@tensorflow/tfjs-backend-webgl@4.15.0/denonext/dist/canvas_util.js";import{getTextureConfig as M}from"/v135/@tensorflow/tfjs-backend-webgl@4.15.0/denonext/dist/tex_util.js";function o(e,r){let t=r();return c().getBool("DEBUG")&&I(e),t}function I(e){let r=e.getError();if(r!==e.NO_ERROR)throw new Error("WebGL Error: "+D(e,r))}var l=596e-10,C=65504;function H(e){return!!(c().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||l<Math.abs(e)&&Math.abs(e)<C)}function D(e,r){switch(r){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${r}`}}function y(e,r){return s(e,()=>e.getExtension(r),'Extension "'+r+'" not supported on this browser.')}function z(e,r){let t=s(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(o(e,()=>e.shaderSource(t,r)),o(e,()=>e.compileShader(t)),e.getShaderParameter(t,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function V(e,r){let t=s(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(o(e,()=>e.shaderSource(t,r)),o(e,()=>e.compileShader(t)),c().get("ENGINE_COMPILE_ONLY"))return t;if(e.getShaderParameter(t,e.COMPILE_STATUS)===!1)throw X(r,e.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var P=/ERROR: [0-9]+:([0-9]+):/g;function X(e,r){let t=P.exec(r);if(t==null){console.log(`Couldn't parse line number in error: ${r}`),console.log(e);return}let n=+t[1],i=e.split(`
`),u=i.length.toString().length+2,f=i.map((x,B)=>a.rightPad((B+1).toString(),u)+x),E=0;for(let x=0;x<f.length;x++)E=Math.max(f[x].length,E);let T=f.slice(0,n-1),_=f.slice(n-1,n),d=f.slice(n);console.log(T.join(`
`)),console.log(r.split(`
`)[0]),console.log(`%c ${a.rightPad(_[0],E)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function q(e){return s(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function $(e,r){if(o(e,()=>e.linkProgram(r)),!c().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(r,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(r)),new Error("Failed to link vertex and fragment shaders.")}function k(e,r){if(o(e,()=>e.validateProgram(r)),e.getProgramParameter(r,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(r)),new Error("Shader program validation failed.")}function p(e,r){let t=s(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return o(e,()=>e.bindBuffer(e.ARRAY_BUFFER,t)),o(e,()=>e.bufferData(e.ARRAY_BUFFER,r,e.STATIC_DRAW)),t}function Y(e,r){let t=s(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return o(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t)),o(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,r,e.STATIC_DRAW)),t}function j(){return c().getNumber("WEBGL_VERSION")===2?1:4}function Z(e){return s(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function Q(e,r){let t=c().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||r<=0){let n=`[${e}x${r}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>t||r>t){let n=`[${e}x${r}]`,i=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function K(e){return s(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function J(e,r,t,n,i,u,f){let E=e.getAttribLocation(r,t);return E===-1?!1:(o(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),o(e,()=>e.vertexAttribPointer(E,i,e.FLOAT,!1,u,f)),o(e,()=>e.enableVertexAttribArray(E)),!0)}function w(e,r,t){L(e,t),o(e,()=>e.activeTexture(e.TEXTURE0+t)),o(e,()=>e.bindTexture(e.TEXTURE_2D,r))}function g(e,r){L(e,r),o(e,()=>e.activeTexture(e.TEXTURE0+r)),o(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function ee(e,r,t){return s(e,()=>e.getUniformLocation(r,t),'uniform "'+t+'" not present in program.')}function re(e,r,t){return e.getUniformLocation(r,t)}function te(e,r,t,n){o(e,()=>w(e,r,n)),o(e,()=>e.uniform1i(t,n))}function ne(e){o(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),o(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),o(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function oe(e,r,t){o(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),o(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0))}function ue(e,r){o(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),o(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ie(e){let r=e.checkFramebufferStatus(e.FRAMEBUFFER);if(r!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+h(e,r))}function h(e,r){switch(r){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${r}`}}function s(e,r,t){let n=o(e,()=>r());if(n==null)throw new Error(t);return n}function L(e,r){let t=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=r+e.TEXTURE0;if(n<e.TEXTURE0||n>t){let i=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${i}.`)}}function N(e,r=2){return a.sizeFromShape(e.slice(0,e.length-r))}function O(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function fe(e){let r=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(r=[N(e),...O(e)]),r}function Ee(e,r=!1){let t=c().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=c().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&c().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=t/2),r&&(t=t*2,n=n*2,e=e.map((E,T)=>T>=e.length-2?a.nearestLargerEven(e[T]):e[T]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=a.squeezeShape(e).newShape);let i=a.sizeFromShape(e),u=null;e.length<=1&&i<=t?u=[1,i]:e.length===2&&e[0]<=t&&e[1]<=t?u=e:e.length===3&&e[0]*e[1]<=t&&e[2]<=t?u=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=t&&e[1]*e[2]<=t?u=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=t&&e[3]<=t?u=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=t&&e[1]*e[2]*e[3]<=t&&(u=[e[0],e[1]*e[2]*e[3]]);let f=u!=null&&Math.max(...u)>n&&Math.min(...u)<=(r?2:1)&&Math.min(...u)>0;if(u==null||f)if(r){let E=N(e),T=2,_=2;e.length&&([T,_]=O(e)),i=E*(T/2)*(_/2),u=a.sizeToSquarishShape(i).map(d=>d*2)}else u=a.sizeToSquarishShape(i);return u}function m(e){return e%2===0}function ae(e,r){if(e=e.slice(-2),r=r.slice(-2),a.arraysEqual(e,r)||!e.length||!r.length||e[0]===0||e[1]===0||r[0]===0||r[1]===0)return!0;if(e.length!==r.length){let t=e[e.length-1],n=r[r.length-1];if(t===n||m(t)&&m(n)&&(e[0]===1||r[0]===1))return!0}return e[1]===r[1]&&m(e[0])&&m(r[0])}var A,b;function ce(e){if(A==null){let r=R(e);A=r.getParameter(r.MAX_TEXTURE_SIZE)}return A}function se(){A=null}function Te(){b=null}function Fe(e){if(b==null){let r=R(e);b=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,b)}function Re(e){if(e===0)return 0;let r,t=R(e);return F(t,"EXT_disjoint_timer_query_webgl2")&&e===2?r=2:F(t,"EXT_disjoint_timer_query")?r=1:r=0,r}function F(e,r){return e.getExtension(r)!=null}function xe(e){try{if(R(e)!=null)return!0}catch(r){return console.log("Error when getting WebGL context: ",r),!1}return!1}function _e(e){if(e===0)return!1;let r=R(e);if(e===1){if(!F(r,"OES_texture_float"))return!1}else if(!F(r,"EXT_color_buffer_float"))return!1;return U(r)}function me(e){if(e===0)return!1;let r=R(e);if(e===1){if(!F(r,"OES_texture_float")||!F(r,"WEBGL_color_buffer_float"))return!1}else{if(F(r,"EXT_color_buffer_float"))return U(r);let n="EXT_color_buffer_half_float";if(F(r,n)){let i=r.getExtension(n);return S(r,i)}return!1}return U(r)}function U(e){let r=M(e),t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,0,r.internalFormatFloat,1,1,0,r.textureFormatFloat,r.textureTypeFloat,null);let u=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,u),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);let f=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(t),e.deleteFramebuffer(u),f}function S(e,r){let t=M(e,r),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let f=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,f),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let E=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(f),E}function Ae(e){return e!==2?!1:R(e).fenceSync!=null}function be(e,r){Array.isArray(e)||(e=[e]),e.forEach(t=>{t!=null&&a.assert(t.dtype!=="complex64",()=>`${r} does not support complex64 tensors in the WebGL backend.`)})}export{be as assertNotComplex,ne as bindCanvasToFramebuffer,oe as bindColorTextureToFramebuffer,te as bindTextureToProgramUniformSampler,w as bindTextureUnit,J as bindVertexBufferToProgramAttribute,o as callAndCheck,H as canBeRepresented,V as createFragmentShader,K as createFramebuffer,q as createProgram,Y as createStaticIndexBuffer,p as createStaticVertexBuffer,Z as createTexture,z as createVertexShader,N as getBatchDim,y as getExtensionOrThrow,h as getFramebufferErrorMessage,Fe as getMaxTexturesInShader,j as getNumChannels,re as getProgramUniformLocation,ee as getProgramUniformLocationOrThrow,O as getRowsCols,fe as getShapeAs3D,Ee as getTextureShapeFromLogicalShape,Re as getWebGLDisjointQueryTimerVersion,D as getWebGLErrorMessage,ce as getWebGLMaxTextureSize,F as hasExtension,_e as isCapableOfRenderingToFloatTexture,me as isDownloadFloatTextureEnabled,ae as isReshapeFree,Ae as isWebGLFenceEnabled,xe as isWebGLVersionEnabled,$ as linkProgram,X as logShaderSourceAndInfoLog,se as resetMaxTextureSize,Te as resetMaxTexturesInShader,ue as unbindColorTextureFromFramebuffer,g as unbindTextureUnit,ie as validateFramebuffer,k as validateProgram,Q as validateTextureSize};
/*! Bundled license information:

@tensorflow/tfjs-backend-webgl/dist/webgl_util.js:
  (**
   * @license
   * Copyright 2017 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   *)
*/
//# sourceMappingURL=webgl_util.js.map