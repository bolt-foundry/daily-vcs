/* esm.sh - esbuild bundle(@tensorflow/tfjs-backend-webgl@4.15.0/dist/gpgpu_util) denonext production */
import{env as _}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/tfjs-core.mjs";import{getGlslDifferences as f}from"/v135/@tensorflow/tfjs-backend-webgl@4.15.0/denonext/dist/glsl_version.js";import*as l from"/v135/@tensorflow/tfjs-backend-webgl@4.15.0/denonext/dist/tex_util.js";import*as a from"/v135/@tensorflow/tfjs-backend-webgl@4.15.0/denonext/dist/webgl_util.js";function h(e){let r=f(),t=`${r.version}
    precision highp float;
    ${r.attribute} vec3 clipSpacePos;
    ${r.attribute} vec2 uv;
    ${r.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return a.createVertexShader(e,t)}function P(e){let r=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return a.createStaticVertexBuffer(e,r)}function w(e){let r=new Uint16Array([0,1,2,2,1,3]);return a.createStaticIndexBuffer(e,r)}function d(e,r,t,n,u,i){a.validateTextureSize(r,t);let c=a.createTexture(e),o=e.TEXTURE_2D;return a.callAndCheck(e,()=>e.bindTexture(o,c)),a.callAndCheck(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),a.callAndCheck(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),a.callAndCheck(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),a.callAndCheck(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),_().getNumber("WEBGL_VERSION")===1?a.callAndCheck(e,()=>e.texImage2D(o,0,n,r,t,0,u,i,null)):a.callAndCheck(e,()=>e.texStorage2D(o,1,n,r,t)),a.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:c,texShape:[t,r]}}function E(e){return e.internalFormatFloat}function U(e,r,t,n){let[u,i]=l.getUnpackedMatrixTextureShapeWidthHeight(r,t);return d(e,u,i,E(n),n.textureFormatFloat,e.FLOAT)}function A(e){return e.internalFormatHalfFloat}function m(e,r,t,n){let[u,i]=l.getUnpackedMatrixTextureShapeWidthHeight(r,t);return d(e,u,i,A(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function F(e){return e.downloadTextureFormat}function p(e,r,t,n){let[u,i]=l.getUnpackedMatrixTextureShapeWidthHeight(r,t);return d(e,u,i,F(n),e.RGBA,e.UNSIGNED_BYTE)}function b(e){return e.internalFormatPackedFloat}function S(e,r,t,n){let[u,i]=l.getPackedMatrixTextureShapeWidthHeight(r,t);return d(e,u,i,b(n),e.RGBA,e.FLOAT)}function s(e){return e.internalFormatPackedHalfFloat}function k(e,r,t,n){let[u,i]=l.getPackedMatrixTextureShapeWidthHeight(r,t);return d(e,u,i,s(n),e.RGBA,n.textureTypeHalfFloat)}function I(e,r,t){return a.callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,t)),a.bindVertexBufferToProgramAttribute(e,r,"clipSpacePos",t,3,20,0)&&a.bindVertexBufferToProgramAttribute(e,r,"uv",t,2,20,12)}function D(e,r,t,n,u,i){a.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,r));let c,o,x;u instanceof Uint8Array?(c=new Uint8Array(t*n*4),o=e.UNSIGNED_BYTE,x=e.RGBA):(c=new Float32Array(t*n*4),o=e.FLOAT,x=i.internalFormatPackedFloat),c.set(u),_().getNumber("WEBGL_VERSION")===2?a.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,t,n,e.RGBA,o,c)):a.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,x,t,n,0,e.RGBA,o,c)),a.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function C(e,r,t){a.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,r)),t.data instanceof Uint8Array?_().getNumber("WEBGL_VERSION")===2?a.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,t.width,t.height,e.RGBA,e.UNSIGNED_BYTE,t.data)):a.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t.width,t.height,0,e.RGBA,e.UNSIGNED_BYTE,t.data)):_().getNumber("WEBGL_VERSION")===2?a.callAndCheck(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,t)):a.callAndCheck(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t)),a.callAndCheck(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function G(e,r,t,n){let u=e.createBuffer();a.callAndCheck(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,u));let o=4*4*r*t;return a.callAndCheck(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),a.callAndCheck(e,()=>e.readPixels(0,0,t,r,e.RGBA,e.FLOAT,0)),a.callAndCheck(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),u}function M(e,r,t){let n=e,u=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,r),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,u),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),u}function N(e,r,t,n){let[u,i]=l.getUnpackedMatrixTextureShapeWidthHeight(r,t),c=4,o=new Uint8Array(l.getUnpackedArraySizeFromMatrixSize(r*t,c));return a.callAndCheck(e,()=>e.readPixels(0,0,u,i,n.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function X(e,r,t,n,u,i,c,o){let x=e,T=new Float32Array(l.getPackedRGBAArraySizeFromMatrixShape(i,c));return x.bindBuffer(x.PIXEL_PACK_BUFFER,r),x.getBufferSubData(x.PIXEL_PACK_BUFFER,0,T),x.bindBuffer(x.PIXEL_PACK_BUFFER,null),T}function y(e,r,t){let n=new Float32Array(r*t*4);return a.callAndCheck(e,()=>e.readPixels(0,0,t,r,e.RGBA,e.FLOAT,n)),n}export{I as bindVertexProgramAttributeStreams,G as createBufferFromOutputTexture,m as createFloat16MatrixTexture,k as createFloat16PackedMatrixTexture,U as createFloat32MatrixTexture,w as createIndexBuffer,S as createPackedMatrixTexture,p as createUnsignedBytesMatrixTexture,P as createVertexBuffer,h as createVertexShader,N as downloadByteEncodedFloatMatrixFromOutputTexture,M as downloadFloat32MatrixFromBuffer,y as downloadMatrixFromPackedOutputTexture,X as downloadPackedMatrixFromBuffer,A as getInternalFormatForFloat16MatrixTexture,s as getInternalFormatForFloat16PackedMatrixTexture,E as getInternalFormatForFloat32MatrixTexture,b as getInternalFormatForPackedMatrixTexture,F as getInternalFormatForUnsignedBytesMatrixTexture,D as uploadDenseMatrixToTexture,C as uploadPixelDataToTexture};
/*! Bundled license information:

@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js:
  (**
   * @license
   * Copyright 2017 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   *)
*/
//# sourceMappingURL=gpgpu_util.js.map