/* esm.sh - esbuild bundle(@tensorflow/tfjs-core@4.15.0/dist/io/indexed_db) denonext production */
import"/v135/@tensorflow/tfjs-core@4.15.0/denonext/dist/flags.js";import{env as g}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/dist/environment.js";import{getModelArtifactsInfoForJSON as P}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/dist/io/io_utils.js";import{IORouterRegistry as B}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/dist/io/router_registry.js";import{CompositeArrayBuffer as A}from"/v135/@tensorflow/tfjs-core@4.15.0/denonext/dist/io/composite_array_buffer.js";var w="tensorflowjs",R=1,p="models_store",m="model_info_store";async function F(){let r=E();return new Promise((e,i)=>{let t=r.deleteDatabase(w);t.onsuccess=()=>e(),t.onerror=o=>i(o)})}function E(){if(!g().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function x(r){let e=r.result;e.createObjectStore(p,{keyPath:"modelPath"}),e.createObjectStore(m,{keyPath:"modelPath"})}var f=class{constructor(e){if(this.indexedDB=E(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,i){return new Promise((t,o)=>{let n=this.indexedDB.open(w,R);n.onupgradeneeded=()=>x(n),n.onsuccess=()=>{let l=n.result;if(i==null){let d=l.transaction(p,"readonly"),s=d.objectStore(p).get(this.modelPath);s.onsuccess=()=>{if(s.result==null)return l.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=a=>(l.close(),o(s.error)),d.oncomplete=()=>l.close()}else{i.weightData=A.join(i.weightData);let d=P(i),c=l.transaction(m,"readwrite"),s=c.objectStore(m),a;try{a=s.put({modelPath:this.modelPath,modelArtifactsInfo:d})}catch(S){return o(S)}let h;a.onsuccess=()=>{h=l.transaction(p,"readwrite");let S=h.objectStore(p),u;try{u=S.put({modelPath:this.modelPath,modelArtifacts:i,modelArtifactsInfo:d})}catch(b){return o(b)}u.onsuccess=()=>t({modelArtifactsInfo:d}),u.onerror=b=>{s=c.objectStore(m);let y=s.delete(this.modelPath);y.onsuccess=()=>(l.close(),o(u.error)),y.onerror=q=>(l.close(),o(u.error))}},a.onerror=S=>(l.close(),o(a.error)),c.oncomplete=()=>{h==null?l.close():h.oncomplete=()=>l.close()}}},n.onerror=l=>o(n.error)})}};f.URL_SCHEME="indexeddb://";var I=r=>g().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(f.URL_SCHEME)?_(r.slice(f.URL_SCHEME.length)):null;B.registerSaveRouter(I);B.registerLoadRouter(I);function _(r){return new f(r)}function M(r){return r.startsWith(f.URL_SCHEME)?r.slice(f.URL_SCHEME.length):r}var D=class{constructor(){this.indexedDB=E()}async listModels(){return new Promise((e,i)=>{let t=this.indexedDB.open(w,R);t.onupgradeneeded=()=>x(t),t.onsuccess=()=>{let o=t.result,n=o.transaction(m,"readonly"),d=n.objectStore(m).getAll();d.onsuccess=()=>{let c={};for(let s of d.result)c[s.modelPath]=s.modelArtifactsInfo;e(c)},d.onerror=c=>(o.close(),i(d.error)),n.oncomplete=()=>o.close()},t.onerror=o=>i(t.error)})}async removeModel(e){return e=M(e),new Promise((i,t)=>{let o=this.indexedDB.open(w,R);o.onupgradeneeded=()=>x(o),o.onsuccess=()=>{let n=o.result,l=n.transaction(m,"readwrite"),d=l.objectStore(m),c=d.get(e),s;c.onsuccess=()=>{if(c.result==null)return n.close(),t(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=d.delete(e),h=()=>{s=n.transaction(p,"readwrite");let u=s.objectStore(p).delete(e);u.onsuccess=()=>i(c.result.modelArtifactsInfo),u.onerror=b=>t(c.error)};a.onsuccess=h,a.onerror=S=>(h(),n.close(),t(c.error))}},c.onerror=a=>(n.close(),t(c.error)),l.oncomplete=()=>{s==null?n.close():s.oncomplete=()=>n.close()}},o.onerror=n=>t(o.error)})}};export{f as BrowserIndexedDB,D as BrowserIndexedDBManager,_ as browserIndexedDB,F as deleteDatabase,I as indexedDBRouter};
/*! Bundled license information:

@tensorflow/tfjs-core/dist/io/indexed_db.js:
  (**
   * @license
   * Copyright 2018 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   *)
*/
//# sourceMappingURL=indexed_db.js.map