/* esm.sh - esbuild bundle(@tensorflow/tfjs-core@4.20.0/dist/ops/gather_nd_util) denonext production */
import{computeStrides as c,sizeFromShape as w}from"/v135/@tensorflow/tfjs-core@4.20.0/denonext/dist/util.js";function g(r,t){let n=r.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(w(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let h=t.shape,o=h[h.length-1],i=1;for(let e=0;e<h.length-1;++e)i*=h[e];let l=r.shape,p=h.slice();p.pop();let a=1;for(let e=o;e<n;++e)a*=l[e],p.push(l[e]);let u=[...c(r.shape).map(e=>e/a),1].slice(0,o);return[p,i,a,u]}export{g as prepareAndValidate};
//# sourceMappingURL=gather_nd_util.js.map