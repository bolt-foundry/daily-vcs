/* esm.sh - esbuild bundle(openai@4.53.0/streaming) denonext production */
import { Buffer as __Buffer$ } from "node:buffer";
import{ReadableStream as g}from"/v135/openai@4.53.0/denonext/_shims.js";import{OpenAIError as l}from"/v135/openai@4.53.0/denonext/error.js";import{APIError as h}from"/v135/openai@4.53.0/denonext/error.js";var d=class n{constructor(e,t){this.iterator=e,this.controller=t}static fromSSEResponse(e,t){let r=!1;async function*o(){if(r)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");r=!0;let a=!1;try{for await(let i of p(e,t))if(!a){if(i.data.startsWith("[DONE]")){a=!0;continue}if(i.event===null){let s;try{s=JSON.parse(i.data)}catch(c){throw console.error("Could not parse message into JSON:",i.data),console.error("From chunk:",i.raw),c}if(s&&s.error)throw new h(void 0,s.error,void 0,void 0);yield s}else{let s;try{s=JSON.parse(i.data)}catch(c){throw console.error("Could not parse message into JSON:",i.data),console.error("From chunk:",i.raw),c}if(i.event=="error")throw new h(void 0,s.error,s.message,void 0);yield{event:i.event,data:s}}}a=!0}catch(i){if(i instanceof Error&&i.name==="AbortError")return;throw i}finally{a||t.abort()}}return new n(o,t)}static fromReadableStream(e,t){let r=!1;async function*o(){let i=new f,s=w(e);for await(let c of s)for(let y of i.decode(c))yield y;for(let c of i.flush())yield c}async function*a(){if(r)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");r=!0;let i=!1;try{for await(let s of o())i||s&&(yield JSON.parse(s));i=!0}catch(s){if(s instanceof Error&&s.name==="AbortError")return;throw s}finally{i||t.abort()}}return new n(a,t)}[Symbol.asyncIterator](){return this.iterator()}tee(){let e=[],t=[],r=this.iterator(),o=a=>({next:()=>{if(a.length===0){let i=r.next();e.push(i),t.push(i)}return a.shift()}});return[new n(()=>o(e),this.controller),new n(()=>o(t),this.controller)]}toReadableStream(){let e=this,t,r=new TextEncoder;return new g({async start(){t=e[Symbol.asyncIterator]()},async pull(o){try{let{value:a,done:i}=await t.next();if(i)return o.close();let s=r.encode(JSON.stringify(a)+`
`);o.enqueue(s)}catch(a){o.error(a)}},async cancel(){await t.return?.()}})}};async function*p(n,e){if(!n.body)throw e.abort(),new l("Attempted to iterate over a response with no body");let t=new u,r=new f,o=w(n.body);for await(let a of m(o))for(let i of r.decode(a)){let s=t.decode(i);s&&(yield s)}for(let a of r.flush()){let i=t.decode(a);i&&(yield i)}}async function*m(n){let e=new Uint8Array;for await(let t of n){if(t==null)continue;let r=t instanceof ArrayBuffer?new Uint8Array(t):typeof t=="string"?new TextEncoder().encode(t):t,o=new Uint8Array(e.length+r.length);o.set(e),o.set(r,e.length),e=o;let a;for(;(a=x(e))!==-1;)yield e.slice(0,a),e=e.slice(a)}e.length>0&&(yield e)}function x(n){for(let r=0;r<n.length-2;r++){if(n[r]===10&&n[r+1]===10||n[r]===13&&n[r+1]===13)return r+2;if(n[r]===13&&n[r+1]===10&&r+3<n.length&&n[r+2]===13&&n[r+3]===10)return r+4}return-1}var u=class{constructor(){this.event=null,this.data=[],this.chunks=[]}decode(e){if(e.endsWith("\r")&&(e=e.substring(0,e.length-1)),!e){if(!this.event&&!this.data.length)return null;let a={event:this.event,data:this.data.join(`
`),raw:this.chunks};return this.event=null,this.data=[],this.chunks=[],a}if(this.chunks.push(e),e.startsWith(":"))return null;let[t,r,o]=E(e,":");return o.startsWith(" ")&&(o=o.substring(1)),t==="event"?this.event=o:t==="data"&&this.data.push(o),null}},f=class n{constructor(){this.buffer=[],this.trailingCR=!1}decode(e){let t=this.decodeText(e);if(this.trailingCR&&(t="\r"+t,this.trailingCR=!1),t.endsWith("\r")&&(this.trailingCR=!0,t=t.slice(0,-1)),!t)return[];let r=n.NEWLINE_CHARS.has(t[t.length-1]||""),o=t.split(n.NEWLINE_REGEXP);return r&&o.pop(),o.length===1&&!r?(this.buffer.push(o[0]),[]):(this.buffer.length>0&&(o=[this.buffer.join("")+o[0],...o.slice(1)],this.buffer=[]),r||(this.buffer=[o.pop()||""]),o)}decodeText(e){if(e==null)return"";if(typeof e=="string")return e;if(typeof __Buffer$<"u"){if(e instanceof __Buffer$)return e.toString();if(e instanceof Uint8Array)return __Buffer$.from(e).toString();throw new l(`Unexpected: received non-Uint8Array (${e.constructor.name}) stream chunk in an environment with a global "Buffer" defined, which this library assumes to be Node. Please report this error.`)}if(typeof TextDecoder<"u"){if(e instanceof Uint8Array||e instanceof ArrayBuffer)return this.textDecoder??(this.textDecoder=new TextDecoder("utf8")),this.textDecoder.decode(e);throw new l(`Unexpected: received non-Uint8Array/ArrayBuffer (${e.constructor.name}) in a web platform. Please report this error.`)}throw new l("Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.")}flush(){if(!this.buffer.length&&!this.trailingCR)return[];let e=[this.buffer.join("")];return this.buffer=[],this.trailingCR=!1,e}};f.NEWLINE_CHARS=new Set([`
`,"\r"]);f.NEWLINE_REGEXP=/\r\n|[\n\r]/g;function A(n){let e=new f,t=[];for(let r of n)t.push(...e.decode(r));return t}function E(n,e){let t=n.indexOf(e);return t!==-1?[n.substring(0,t),e,n.substring(t+e.length)]:[n,"",""]}function w(n){if(n[Symbol.asyncIterator])return n;let e=n.getReader();return{async next(){try{let t=await e.read();return t?.done&&e.releaseLock(),t}catch(t){throw e.releaseLock(),t}},async return(){let t=e.cancel();return e.releaseLock(),await t,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}export{d as Stream,A as _decodeChunks,p as _iterSSEMessages,w as readableStreamAsyncIterable};
//# sourceMappingURL=streaming.js.map