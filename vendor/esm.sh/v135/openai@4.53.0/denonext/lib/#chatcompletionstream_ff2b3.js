/* esm.sh - esbuild bundle(openai@4.53.0/lib/ChatCompletionStream) denonext production */
import{OpenAIError as f,APIUserAbortError as G}from"/v135/openai@4.53.0/denonext/error.js";import{AbstractChatCompletionRunner as Q}from"/v135/openai@4.53.0/denonext/lib/AbstractChatCompletionRunner.js";import{Stream as L}from"/v135/openai@4.53.0/denonext/streaming.js";var h=function(a,o,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof o=="function"?a!==o||!n:!o.has(a))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(a):n?n.value:o.get(a)},T=function(a,o,t,n,e){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!e)throw new TypeError("Private accessor was defined without a setter");if(typeof o=="function"?a!==o||!e:!o.has(a))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?e.call(a,t):e?e.value=t:o.set(a,t),t},u,w,A,F,P,k,M=class a extends Q{constructor(){super(...arguments),u.add(this),w.set(this,void 0)}get currentChatCompletionSnapshot(){return h(this,w,"f")}static fromReadableStream(o){let t=new a;return t._run(()=>t._fromReadableStream(o)),t}static createChatCompletion(o,t,n){let e=new a;return e._run(()=>e._runChatCompletion(o,{...t,stream:!0},{...n,headers:{...n?.headers,"X-Stainless-Helper-Method":"stream"}})),e}async _createChatCompletion(o,t,n){let e=n?.signal;e&&(e.aborted&&this.controller.abort(),e.addEventListener("abort",()=>this.controller.abort())),h(this,u,"m",A).call(this);let s=await o.create({...t,stream:!0},{...n,signal:this.controller.signal});this._connected();for await(let i of s)h(this,u,"m",F).call(this,i);if(s.controller.signal?.aborted)throw new G;return this._addChatCompletion(h(this,u,"m",P).call(this))}async _fromReadableStream(o,t){let n=t?.signal;n&&(n.aborted&&this.controller.abort(),n.addEventListener("abort",()=>this.controller.abort())),h(this,u,"m",A).call(this),this._connected();let e=L.fromReadableStream(o,this.controller),s;for await(let i of e)s&&s!==i.id&&this._addChatCompletion(h(this,u,"m",P).call(this)),h(this,u,"m",F).call(this,i),s=i.id;if(e.controller.signal?.aborted)throw new G;return this._addChatCompletion(h(this,u,"m",P).call(this))}[(w=new WeakMap,u=new WeakSet,A=function(){this.ended||T(this,w,void 0,"f")},F=function(t){if(this.ended)return;let n=h(this,u,"m",k).call(this,t);this._emit("chunk",t,n);let e=t.choices[0]?.delta?.content,s=n.choices[0]?.message;e!=null&&s?.role==="assistant"&&s?.content&&this._emit("content",e,s.content)},P=function(){if(this.ended)throw new f("stream has ended, this shouldn't happen");let t=h(this,w,"f");if(!t)throw new f("request ended without sending any chunks");return T(this,w,void 0,"f"),W(t)},k=function(t){var n,e,s;let i=h(this,w,"f"),{choices:q,...C}=t;i?Object.assign(i,C):i=T(this,w,{...C,choices:[]},"f");for(let{delta:l,finish_reason:b,index:S,logprobs:g=null,...$}of t.choices){let r=i.choices[S];if(r||(r=i.choices[S]={finish_reason:b,index:S,message:{},logprobs:g,...$}),g)if(!r.logprobs)r.logprobs=Object.assign({},g);else{let{content:_,...v}=g;Object.assign(r.logprobs,v),_&&((n=r.logprobs).content??(n.content=[]),r.logprobs.content.push(..._))}if(b&&(r.finish_reason=b),Object.assign(r,$),!l)continue;let{content:R,function_call:c,role:y,tool_calls:m,...I}=l;if(Object.assign(r.message,I),R&&(r.message.content=(r.message.content||"")+R),y&&(r.message.role=y),c&&(r.message.function_call?(c.name&&(r.message.function_call.name=c.name),c.arguments&&((e=r.message.function_call).arguments??(e.arguments=""),r.message.function_call.arguments+=c.arguments)):r.message.function_call=c),m){r.message.tool_calls||(r.message.tool_calls=[]);for(let{index:_,id:v,type:j,function:p,...E}of m){let d=(s=r.message.tool_calls)[_]??(s[_]={});Object.assign(d,E),v&&(d.id=v),j&&(d.type=j),p&&(d.function??(d.function={arguments:""})),p?.name&&(d.function.name=p.name),p?.arguments&&(d.function.arguments+=p.arguments)}}}return i},Symbol.asyncIterator)](){let o=[],t=[],n=!1;return this.on("chunk",e=>{let s=t.shift();s?s.resolve(e):o.push(e)}),this.on("end",()=>{n=!0;for(let e of t)e.resolve(void 0);t.length=0}),this.on("abort",e=>{n=!0;for(let s of t)s.reject(e);t.length=0}),this.on("error",e=>{n=!0;for(let s of t)s.reject(e);t.length=0}),{next:async()=>o.length?{value:o.shift(),done:!1}:n?{value:void 0,done:!0}:new Promise((s,i)=>t.push({resolve:s,reject:i})).then(s=>s?{value:s,done:!1}:{value:void 0,done:!0}),return:async()=>(this.abort(),{value:void 0,done:!0})}}toReadableStream(){return new L(this[Symbol.asyncIterator].bind(this),this.controller).toReadableStream()}};function W(a){let{id:o,choices:t,created:n,model:e,system_fingerprint:s,...i}=a;return{...i,id:o,choices:t.map(({message:q,finish_reason:C,index:l,logprobs:b,...S})=>{if(!C)throw new f(`missing finish_reason for choice ${l}`);let{content:g=null,function_call:$,tool_calls:r,...R}=q,c=q.role;if(!c)throw new f(`missing role for choice ${l}`);if($){let{arguments:y,name:m}=$;if(y==null)throw new f(`missing function_call.arguments for choice ${l}`);if(!m)throw new f(`missing function_call.name for choice ${l}`);return{...S,message:{content:g,function_call:{arguments:y,name:m},role:c},finish_reason:C,index:l,logprobs:b}}return r?{...S,index:l,finish_reason:C,logprobs:b,message:{...R,role:c,content:g,tool_calls:r.map((y,m)=>{let{function:I,type:_,id:v,...j}=y,{arguments:p,name:E,...d}=I||{};if(v==null)throw new f(`missing choices[${l}].tool_calls[${m}].id
${O(a)}`);if(_==null)throw new f(`missing choices[${l}].tool_calls[${m}].type
${O(a)}`);if(E==null)throw new f(`missing choices[${l}].tool_calls[${m}].function.name
${O(a)}`);if(p==null)throw new f(`missing choices[${l}].tool_calls[${m}].function.arguments
${O(a)}`);return{...j,id:v,type:_,function:{...d,name:E,arguments:p}}})}}:{...S,message:{...R,content:g,role:c},finish_reason:C,index:l,logprobs:b}}),created:n,model:e,object:"chat.completion",...s?{system_fingerprint:s}:{}}}function O(a){return JSON.stringify(a)}export{M as ChatCompletionStream};
//# sourceMappingURL=ChatCompletionStream.js.map