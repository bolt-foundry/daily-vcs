/* esm.sh - esbuild bundle(axios@1.7.2/unsafe/core/Axios) denonext production */
import f from"/v135/axios@1.7.2/denonext/unsafe/utils.js";import R from"/v135/axios@1.7.2/denonext/unsafe/helpers/buildURL.js";import b from"/v135/axios@1.7.2/denonext/unsafe/core/InterceptorManager.js";import S from"/v135/axios@1.7.2/denonext/unsafe/core/dispatchRequest.js";import y from"/v135/axios@1.7.2/denonext/unsafe/core/mergeConfig.js";import C from"/v135/axios@1.7.2/denonext/unsafe/core/buildFullPath.js";import k from"/v135/axios@1.7.2/denonext/unsafe/helpers/validator.js";import I from"/v135/axios@1.7.2/denonext/unsafe/core/AxiosHeaders.js";var u=k.validators,p=class{constructor(t){this.defaults=t,this.interceptors={request:new b,response:new b}}async request(t,e){try{return await this._request(t,e)}catch(s){if(s instanceof Error){let n;Error.captureStackTrace?Error.captureStackTrace(n={}):n=new Error;let a=n.stack?n.stack.replace(/^.+\n/,""):"";try{s.stack?a&&!String(s.stack).endsWith(a.replace(/^.+\n.+\n/,""))&&(s.stack+=`
`+a):s.stack=a}catch{}}throw s}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=y(this.defaults,e);let{transitional:s,paramsSerializer:n,headers:a}=e;s!==void 0&&k.assertOptions(s,{silentJSONParsing:u.transitional(u.boolean),forcedJSONParsing:u.transitional(u.boolean),clarifyTimeoutError:u.transitional(u.boolean)},!1),n!=null&&(f.isFunction(n)?e.paramsSerializer={serialize:n}:k.assertOptions(n,{encode:u.function,serialize:u.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let m=a&&f.merge(a.common,a[e.method]);a&&f.forEach(["delete","get","head","post","put","patch","common"],r=>{delete a[r]}),e.headers=I.concat(m,a);let h=[],E=!0;this.interceptors.request.forEach(function(i){typeof i.runWhen=="function"&&i.runWhen(e)===!1||(E=E&&i.synchronous,h.unshift(i.fulfilled,i.rejected))});let d=[];this.interceptors.response.forEach(function(i){d.push(i.fulfilled,i.rejected)});let l,o=0,c;if(!E){let r=[S.bind(this),void 0];for(r.unshift.apply(r,h),r.push.apply(r,d),c=r.length,l=Promise.resolve(e);o<c;)l=l.then(r[o++],r[o++]);return l}c=h.length;let q=e;for(o=0;o<c;){let r=h[o++],i=h[o++];try{q=r(q)}catch(P){i.call(this,P);break}}try{l=S.call(this,q)}catch(r){return Promise.reject(r)}for(o=0,c=d.length;o<c;)l=l.then(d[o++],d[o++]);return l}getUri(t){t=y(this.defaults,t);let e=C(t.baseURL,t.url);return R(e,t.params,t.paramsSerializer)}};f.forEach(["delete","get","head","options"],function(t){p.prototype[t]=function(e,s){return this.request(y(s||{},{method:t,url:e,data:(s||{}).data}))}});f.forEach(["post","put","patch"],function(t){function e(s){return function(a,m,h){return this.request(y(h||{},{method:t,headers:s?{"Content-Type":"multipart/form-data"}:{},url:a,data:m}))}}p.prototype[t]=e(),p.prototype[t+"Form"]=e(!0)});var L=p;export{L as default};

import "https://deno.land/x/xhr@0.3.0/mod.ts";//# sourceMappingURL=Axios.js.map