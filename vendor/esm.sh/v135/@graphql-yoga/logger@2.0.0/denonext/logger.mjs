/* esm.sh - esbuild bundle(@graphql-yoga/logger@2.0.0) denonext production */
var e={red:"\x1B[31m",yellow:"\x1B[33m",magenta:"\x1B[35m",cyan:"\x1B[36m",reset:"\x1B[0m"},t=e.yellow+"WARN"+e.reset,g=e.cyan+"INFO"+e.reset,l=e.red+"ERR"+e.reset,a=e.magenta+"DEBUG"+e.reset,n={debug:0,info:1,warn:2,error:3,silent:4},s=()=>{},c=o=>(...r)=>console.log(o,...r),i=console.debug?(...o)=>console.debug(a,...o):c(a),b=console.info?(...o)=>console.info(g,...o):c(g),x=console.warn?(...o)=>console.warn(t,...o):c(t),f=console.error?(...o)=>console.error(l,...o):c(l),d=(o=globalThis.process?.env.DEBUG==="1"?"debug":"info")=>{let r=n[o];return{debug:r>n.debug?s:i,info:r>n.info?s:b,warn:r>n.warn?s:x,error:r>n.error?s:f}};export{d as createLogger,a as debugPrefix,l as errorPrefix,g as infoPrefix,t as warnPrefix};
//# sourceMappingURL=logger.mjs.map