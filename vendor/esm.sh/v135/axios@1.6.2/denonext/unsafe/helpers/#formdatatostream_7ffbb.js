/* esm.sh - esbuild bundle(axios@1.6.2/unsafe/helpers/formDataToStream) denonext production */
import{TextEncoder as u}from"node:util";import{Readable as L}from"node:stream";import s from"/v135/axios@1.6.2/denonext/unsafe/utils.js";import T from"/v135/axios@1.6.2/denonext/unsafe/helpers/readBlob.js";var A=s.ALPHABET.ALPHA_DIGIT+"-_",c=new u,r=`\r
`,B=c.encode(r),C=2,h=class{constructor(e,t){let{escapeName:a}=this.constructor,i=s.isString(t),n=`Content-Disposition: form-data; name="${a(e)}"${!i&&t.name?`; filename="${a(t.name)}"`:""}${r}`;i?t=c.encode(String(t).replace(/\r?\n|\r\n?/g,r)):n+=`Content-Type: ${t.type||"application/octet-stream"}${r}`,this.headers=c.encode(n+r),this.contentLength=i?t.byteLength:t.size,this.size=this.headers.byteLength+this.contentLength+C,this.name=e,this.value=t}async*encode(){yield this.headers;let{value:e}=this;s.isTypedArray(e)?yield e:yield*T(e),yield B}static escapeName(e){return String(e).replace(/[\r\n"]/g,t=>({"\r":"%0D","\n":"%0A",'"':"%22"})[t])}},E=(d,e,t)=>{let{tag:a="form-data-boundary",size:i=25,boundary:n=a+"-"+s.generateString(i,A)}=t||{};if(!s.isFormData(d))throw TypeError("FormData instance required");if(n.length<1||n.length>70)throw Error("boundary must be 10-70 characters long");let y=c.encode("--"+n+r),p=c.encode("--"+n+"--"+r+r),o=p.byteLength,g=Array.from(d.entries()).map(([m,b])=>{let l=new h(m,b);return o+=l.size,l});o+=y.byteLength*g.length,o=s.toFiniteNumber(o);let f={"Content-Type":`multipart/form-data; boundary=${n}`};return Number.isFinite(o)&&(f["Content-Length"]=o),e&&e(f),L.from(async function*(){for(let m of g)yield y,yield*m.encode();yield p}())},N=E;export{N as default};

import "https://deno.land/x/xhr@0.3.0/mod.ts";//# sourceMappingURL=formDataToStream.js.map