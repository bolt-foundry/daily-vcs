/* esm.sh - esbuild bundle(@ungap/structured-clone@1.2.0) denonext production */
var d=typeof self=="object"?self:globalThis,k=(o,c)=>{let n=(r,f)=>(o.set(f,r),r),a=r=>{if(o.has(r))return o.get(r);let[f,t]=c[r];switch(f){case 0:case-1:return n(t,r);case 1:{let e=n([],r);for(let s of t)e.push(a(s));return e}case 2:{let e=n({},r);for(let[s,I]of t)e[a(s)]=a(I);return e}case 3:return n(new Date(t),r);case 4:{let{source:e,flags:s}=t;return n(new RegExp(e,s),r)}case 5:{let e=n(new Map,r);for(let[s,I]of t)e.set(a(s),a(I));return e}case 6:{let e=n(new Set,r);for(let s of t)e.add(a(s));return e}case 7:{let{name:e,message:s}=t;return n(new d[e](s),r)}case 8:return n(BigInt(t),r);case"BigInt":return n(Object(BigInt(t)),r)}return n(new d[f](t),r)};return a},B=o=>k(new Map,o)(0);var E="",{toString:D}={},{keys:z}=Object,T=o=>{let c=typeof o;if(c!=="object"||!o)return[0,c];let n=D.call(o).slice(8,-1);switch(n){case"Array":return[1,E];case"Object":return[2,E];case"Date":return[3,E];case"RegExp":return[4,E];case"Map":return[5,E];case"Set":return[6,E]}return n.includes("Array")?[1,n]:n.includes("Error")?[7,n]:[2,n]},S=([o,c])=>o===0&&(c==="function"||c==="symbol"),j=(o,c,n,a)=>{let r=(t,e)=>{let s=a.push(t)-1;return n.set(e,s),s},f=t=>{if(n.has(t))return n.get(t);let[e,s]=T(t);switch(e){case 0:{let i=t;switch(s){case"bigint":e=8,i=t.toString();break;case"function":case"symbol":if(o)throw new TypeError("unable to serialize "+s);i=null;break;case"undefined":return r([-1],t)}return r([e,i],t)}case 1:{if(s)return r([s,[...t]],t);let i=[],u=r([e,i],t);for(let p of t)i.push(f(p));return u}case 2:{if(s)switch(s){case"BigInt":return r([s,t.toString()],t);case"Boolean":case"Number":case"String":return r([s,t.valueOf()],t)}if(c&&"toJSON"in t)return f(t.toJSON());let i=[],u=r([e,i],t);for(let p of z(t))(o||!S(T(t[p])))&&i.push([f(p),f(t[p])]);return u}case 3:return r([e,t.toISOString()],t);case 4:{let{source:i,flags:u}=t;return r([e,{source:i,flags:u}],t)}case 5:{let i=[],u=r([e,i],t);for(let[p,P]of t)(o||!(S(T(p))||S(T(P))))&&i.push([f(p),f(P)]);return u}case 6:{let i=[],u=r([e,i],t);for(let p of t)(o||!S(T(p)))&&i.push(f(p));return u}}let{message:I}=t;return r([e,{name:s,message:I}],t)};return f},M=(o,{json:c,lossy:n}={})=>{let a=[];return j(!(c||n),!!c,new Map,a)(o),a};var l=typeof structuredClone=="function"?(o,c)=>c&&("json"in c||"lossy"in c)?B(M(o,c)):structuredClone(o):(o,c)=>B(M(o,c));export{l as default,B as deserialize,M as serialize};
//# sourceMappingURL=structured-clone.mjs.map